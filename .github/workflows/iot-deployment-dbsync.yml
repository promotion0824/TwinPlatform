name: "IoT Edge Deployment DbSync Service"

on:
  push:
    branches:
      - main
      - "release/**"
    paths:
      - applications/EdgeDeploymentDashboard/Willow.IoTService.DependencyInjection/**
      - applications/EdgeDeploymentDashboard/Willow.IoTService.Deployment/**
      - applications/EdgeDeploymentDashboard/Willow.IoTService.Deployment.DbSync/**

  pull_request:
    branches:
      - main
    paths:
      - applications/EdgeDeploymentDashboard/Willow.IoTService.DependencyInjection/**
      - applications/EdgeDeploymentDashboard/Willow.IoTService.Deployment/**
      - applications/EdgeDeploymentDashboard/Willow.IoTService.Deployment.DbSync/**

  workflow_dispatch:
    inputs:
      pushToDevAcr:
        type: boolean
        description: Push Docker image to Dev ACR
        default: true
      pushToPrdAcr:
        type: boolean
        description: Promote Docker image to Prod ACR
        default: false

env:
  projectPath: applications/EdgeDeploymentDashboard/Willow.IoTService.Deployment.DbSync
  srcProjectDir: Willow.IoTService.Deployment.DbSync.Worker
  testProjectDir: Willow.IoTService.Deployment.DbSync.Application.Tests
  productName: iot-services
  imageName: edge-deployment-db-sync-service

jobs:
  build:
    name: Build, Test and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: WillowInc/TwinPlatform/.github/actions/docker/build_push_gitversioning@main
        name: Build and Push Docker Image
        with:
          botToken: ${{ secrets.SVC_BOT_TOKEN }}
          clientId: ${{ vars.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          directoryBuildPropsPath: .config/common.props
          dockerfile: ${{ env.projectPath }}/${{ env.srcProjectDir }}/Dockerfile
          dockerContext: ${{ github.workspace }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          imageName: ${{ env.productName }}/${{ env.imageName }}
          infraProjectPath: Applications/EdgeDeploymentDashboard
          nonProdAcrClientId: ${{ vars.NONPROD_ACR_CLIENT_ID }}
          nonProdAcrClientSecret: ${{ secrets.NONPROD_ACR_CLIENT_SECRET }}
          prodAcrClientId: ${{ vars.PROD_ACR_CLIENT_ID }}
          prodAcrClientSecret: ${{ secrets.PROD_ACR_CLIENT_SECRET }}
          productName: ${{ env.productName }}
          tenantId: ${{ vars.TENANT_ID_WILLOWINC }}

      - uses: actions/checkout@v4
        name: Checkout

      - name: Add Authenticated Github Nuget Source
        shell: bash
        run: |
          dotnet nuget remove source WillowGithub
          dotnet nuget add source "https://nuget.pkg.github.com/WillowInc/index.json" --name WillowGithub --username gh --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --configfile ./NuGet.Config

      - uses: WillowInc/TwinPlatform/.github/actions/dotnet/build@main
        name: Build
        with:
          dotnetVersion: 8.0
          srcProjectDir: ${{ env.projectPath }}/${{ env.srcProjectDir }}

      - name: Run Unit Tests
        shell: bash
        run: dotnet test ${{ env.projectPath }}/${{ env.testProjectDir }} --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --configuration Release
