name: "user-management"

on:
  workflow_dispatch:
    inputs:
      pushToDevAcr:
        type: boolean
        description: Promote Docker image to DEV ACRs
        default: true
      pushToPrdAcr:
        type: boolean
        description: Promote Docker image to PROD ACRs. If false works only on release branch trigger.
        default: false
      bumpImageVersion:
        type: boolean
        description: Create an approved PR to bump up image version in the IAD Repo.
        default: false

  pull_request:
    branches:
      - main
    paths:
      - applications/UserManagement/**

  push:
    branches:
      - main
      - "releases/**"
    paths:
      - applications/UserManagement/**

env:
  buildConfiguration: Release
  mainProject: Authorization.TwinPlatform.Permission.Api
  productName: twin
  majorVersion: 1.24
  apiImageName: authrz-api
  apiProjectPath: "applications/UserManagement/Authorization.TwinPlatform.Permission.Api"
  webImageName: authrz-web
  webProjectPath: "applications/UserManagement/Authorization.TwinPlatform.Web"
  srcProjectDir: "."

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: Update build number
        shell: bash
        id: BuildVersion
        run: |
          versionFull=${{ env.majorVersion }}.${{ github.run_number }}
          echo "BuildNumber=$versionFull" >> $GITHUB_STEP_SUMMARY
          echo "BuildNumber=$versionFull" >> $GITHUB_OUTPUT

      - name: Add Authenticated Github Nuget Source
        shell: bash
        run: |
          dotnet nuget remove source WillowGithub
          dotnet nuget add source "https://nuget.pkg.github.com/WillowInc/index.json" --name WillowGithub --username gh --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --configfile ./NuGet.Config

      - name: Setup .npmrc file
        uses: actions/setup-node@v3
        with:
          node-version: "16.14"
          registry-url: "https://npm.pkg.github.com"
          always-auth: true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}

      - name: NPM Install
        working-directory: applications/UserManagement/Authorization.TwinPlatform.Web/authorization-client-app
        run: |
          npm ci

      - name: NPM Build
        working-directory: applications/UserManagement/Authorization.TwinPlatform.Web/authorization-client-app
        env:
          CI: ""
          NODE_OPTIONS: --max-old-space-size=16384
        run: |
          npm run build

      - name: Upload NPM Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: webfiles
          path: applications/UserManagement/Authorization.TwinPlatform.Web/authorization-client-app/dist

      - name: Download webfiles artifact
        uses: actions/download-artifact@v4
        with:
          name: webfiles
          path: applications/UserManagement/Authorization.TwinPlatform.Web/authorization-client-app/dist

      - name: Evaluate whether to Push
        id: evaluate-push
        shell: pwsh
        run: |
          # only don't push to ACRs if manually triggered and pushToDevAcr is false
          # if not manually triggered then always push to ACRs

          $pushToDevAcr = 'true'
          If ( '${{ github.event_name }}' -eq 'workflow_dispatch') { $pushToDevAcr = '${{ github.event.inputs.pushToDevAcr }}' }
          write-output "pushToDevAcr=$pushToDevAcr" >> $Env:GITHUB_STEP_SUMMARY
          write-output "pushToDevAcr=$pushToDevAcr" >> $Env:GITHUB_OUTPUT

          # only push to prd acr when build from release branch
          $pushToPrdAcr = 'false'
          If ('${{ github.ref }}' -like 'refs/heads/release/*') {
            $pushToPrdAcr = 'true'
          }

          If ('${{ github.event_name }}' -eq 'workflow_dispatch') {
            $pushToPrdAcr = '${{ github.event.inputs.pushToPrdAcr }}'
          }

          write-output "pushToPrdAcr=$pushToPrdAcr" >> $Env:GITHUB_STEP_SUMMARY
          write-output "pushToPrdAcr=$pushToPrdAcr" >> $Env:GITHUB_OUTPUT

          $bumpImageVersion = '${{ github.event.inputs.bumpImageVersion }}'
          write-output "bumpImageVersion=$bumpImageVersion" >> $Env:GITHUB_STEP_SUMMARY
          write-output "bumpImageVersion=$bumpImageVersion" >> $Env:GITHUB_OUTPUT

      - name: Login to Single Tenant Dev ACR
        uses: docker/login-action@v3
        with:
          registry: crwildevshared01.azurecr.io
          username: ${{ vars.NONPROD_ACR_CLIENT_ID }}
          password: ${{ secrets.NONPROD_ACR_CLIENT_SECRET }}
      - name: Login to Single Tenant Prod ACR
        uses: docker/login-action@v3
        with:
          registry: crwilprdshared01.azurecr.io
          username: ${{ vars.PROD_ACR_CLIENT_ID }}
          password: ${{ secrets.PROD_ACR_CLIENT_SECRET }}

      - name: Api Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Build
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            ASSEMBLY_VERSION=${{ steps.BuildVersion.outputs.buildNumber }}
            NUGET_USERNAME=gh
            NUGET_PASSWORD=${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.apiProjectPath }}/Dockerfile
          load: true
          tags: |
            crwildevshared01.azurecr.io/${{ env.apiImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}
            crwilprdshared01.azurecr.io/${{ env.apiImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}

      - name: Web Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Build
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            ASSEMBLY_VERSION=${{ steps.BuildVersion.outputs.buildNumber }}
            NUGET_USERNAME=gh
            NUGET_PASSWORD=${{ secrets.GITHUB_TOKEN }}
            NPM_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.webProjectPath }}/Dockerfile
          load: true
          tags: |
            nonprodplatformsharedcr.azurecr.io/${{ env.webImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}
            nonprodplatformsharedcr.azurecr.io/${{ env.webImageName }}:latest
            prodplatformsharedcr.azurecr.io/${{ env.webImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}
            prodplatformsharedcr.azurecr.io/${{ env.webImageName }}:latest
            crwildevshared01.azurecr.io/${{ env.webImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}
            crwilprdshared01.azurecr.io/${{ env.webImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}

      - name: Api Push to Single Tenant Dev
        if: ${{ steps.evaluate-push.outputs.pushToDevAcr == 'true' }}
        run: |
          docker push crwildevshared01.azurecr.io/${{ env.apiImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}
      - name: Web Push to Single Tenant Dev
        if: ${{ steps.evaluate-push.outputs.pushToDevAcr == 'true' }}
        run: |
          docker push crwildevshared01.azurecr.io/${{ env.webImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}

      - name: Api Push to Single Tenant Prod
        if: ${{ steps.evaluate-push.outputs.pushToPrdAcr == 'true' }}
        run: |
          docker push crwilprdshared01.azurecr.io/${{ env.apiImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}
      - name: Web Push to Single Tenant Prod
        if: ${{ steps.evaluate-push.outputs.pushToPrdAcr == 'true' }}
        run: |
          docker push crwilprdshared01.azurecr.io/${{ env.webImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}

      - uses: WillowInc/.github/.github/actions/bump-version@main
        name: Bump Dev Api Image Version
        id: bump-version-api-dev
        if: ${{ (steps.evaluate-push.outputs.pushToDevAcr == 'true') && (steps.evaluate-push.outputs.bumpImageVersion == 'true') }}
        with:
          team-name: ${{ env.productName }}
          project-path: Applications/UserManagement
          image: "${{ env.apiImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}"
          bot-token: ${{ secrets.SVC_BOT_TOKEN }}
          appsettings: "appsettings.json"
          container-name: "authrz-api"

      - uses: WillowInc/.github/.github/actions/bump-version@main
        name: Bump Prod Api Image Version
        id: bump-version-api-prod
        if: ${{ (steps.evaluate-push.outputs.pushToPrdAcr == 'true') && (steps.evaluate-push.outputs.bumpImageVersion == 'true') }}
        with:
          team-name: ${{ env.productName }}
          project-path: Applications/UserManagement
          image: "${{ env.apiImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}"
          bot-token: ${{ secrets.SVC_BOT_TOKEN }}
          appsettings: "appsettings.prd.json"
          container-name: "authrz-api"

      - uses: WillowInc/.github/.github/actions/bump-version@main
        name: Bump Dev Web Image Version
        id: bump-version-web-dev
        if: ${{ (steps.evaluate-push.outputs.pushToDevAcr == 'true') && (steps.evaluate-push.outputs.bumpImageVersion == 'true') }}
        with:
          team-name: ${{ env.productName }}
          project-path: Applications/UserManagement
          image: "${{ env.webImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}"
          bot-token: ${{ secrets.SVC_BOT_TOKEN }}
          appsettings: "appsettings.json"
          container-name: "authrz-web"

      - uses: WillowInc/.github/.github/actions/bump-version@main
        name: Bump Prod Web Image Version
        id: bump-version-web-prod
        if: ${{ (steps.evaluate-push.outputs.pushToPrdAcr == 'true') && (steps.evaluate-push.outputs.bumpImageVersion == 'true') }}
        with:
          team-name: ${{ env.productName }}
          project-path: Applications/UserManagement
          image: "${{ env.webImageName }}:${{ steps.BuildVersion.outputs.buildNumber }}"
          bot-token: ${{ secrets.SVC_BOT_TOKEN }}
          appsettings: "appsettings.prd.json"
          container-name: "authrz-web"
