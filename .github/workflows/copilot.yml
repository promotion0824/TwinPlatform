name: "copilot"

on:
  workflow_dispatch:
    inputs:
      pushToDevAcr:
        type: boolean
        description: Promote Docker image to DEV ACRs
        default: true
      pushToPrdAcr:
        type: boolean
        description: Promote Docker image to PRD ACRs
        default: false
      bumpImageVersion:
        type: boolean
        description: Create an approved PR to bump up image version in the IAD Repo.
        default: true

  pull_request:
    branches:
      - main
    paths:
      - applications/Copilot/**

  push:
    branches:
      - main
      - "releases/**"
      - feature/copilot-python-host
    paths:
      - applications/Copilot/**

env:
  productName: twin
  imageName: copilot
  majorVersion: 0.0
  projectPath: "applications/Copilot"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: Update build number
        shell: bash
        id: BuildVersion
        run: |
          versionFull=${{ env.majorVersion }}.${{ github.run_number }}
          echo "BuildNumber=$versionFull" >> $GITHUB_STEP_SUMMARY
          echo "BuildNumber=$versionFull" >> $GITHUB_OUTPUT

      - name: Evaluate whether to Push
        id: evaluate-push
        shell: pwsh
        run: |
          # only to ACRs if manually triggered and pushToDevAcr is true
          # or if it triggered from main branch

          $pushToDevAcr = 'false'
          If ( '${{ github.event_name }}' -eq 'workflow_dispatch') { $pushToDevAcr = '${{ github.event.inputs.pushToDevAcr }}' }
          If ('${{ github.ref }}' -eq 'refs/heads/main') {
            $pushToDevAcr = 'true'
          }
          write-output "pushToDevAcr=$pushToDevAcr" >> $Env:GITHUB_STEP_SUMMARY
          write-output "pushToDevAcr=$pushToDevAcr" >> $Env:GITHUB_OUTPUT

          # only push to prd acr when build from release branch
          $pushToPrdAcr = 'false'
          If ('${{ github.ref }}' -like 'refs/heads/release/*') {
            $pushToPrdAcr = 'true'
          }

          If ('${{ github.event_name }}' -eq 'workflow_dispatch') {
            $pushToPrdAcr = '${{ github.event.inputs.pushToPrdAcr }}'
          }

          write-output "pushToPrdAcr=$pushToPrdAcr" >> $Env:GITHUB_STEP_SUMMARY
          write-output "pushToPrdAcr=$pushToPrdAcr" >> $Env:GITHUB_OUTPUT

          $bumpImageVersion = '${{ github.event.inputs.bumpImageVersion }}'
          write-output "bumpImageVersion=$bumpImageVersion" >> $Env:GITHUB_STEP_SUMMARY
          write-output "bumpImageVersion=$bumpImageVersion" >> $Env:GITHUB_OUTPUT

      - name: Login to Single Tenant Dev ACR
        uses: docker/login-action@v2
        with:
          registry: crwildevshared01.azurecr.io
          username: ${{ vars.NONPROD_ACR_CLIENT_ID }}
          password: ${{ secrets.NONPROD_ACR_CLIENT_SECRET }}
      - name: Login to Single Tenant Prod ACR
        uses: docker/login-action@v2
        with:
          registry: crwilprdshared01.azurecr.io
          username: ${{ vars.PROD_ACR_CLIENT_ID }}
          password: ${{ secrets.PROD_ACR_CLIENT_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Build
        uses: docker/build-push-action@v4
        with:
          context: ${{env.projectPath}}
          build-args: |
            ASSEMBLY_VERSION=${{ steps.BuildVersion.outputs.buildNumber }}
          file: ${{env.projectPath}}/Dockerfile
          load: true
          tags: |
            crwildevshared01.azurecr.io/${{ env.imageName }}:${{ steps.BuildVersion.outputs.buildNumber }}
            crwilprdshared01.azurecr.io/${{ env.imageName }}:${{ steps.BuildVersion.outputs.buildNumber }}


      - name: Push to Single Tenant Dev
        if: ${{ steps.evaluate-push.outputs.pushToDevAcr == 'true' }}
        run: |
          docker push crwildevshared01.azurecr.io/${{ env.imageName }}:${{ steps.BuildVersion.outputs.buildNumber }}

      - name: Push to Single Tenant Prod
        if: ${{ steps.evaluate-push.outputs.pushToPrdAcr == 'true' }}
        run: |
          docker push crwilprdshared01.azurecr.io/${{ env.imageName }}:${{ steps.BuildVersion.outputs.buildNumber }}

      - uses: WillowInc/.github/.github/actions/bump-version@main
        name: Bump Dev Image Version
        id: bump-version-dev
        if: ${{ (steps.evaluate-push.outputs.pushToDevAcr == 'true') && (steps.evaluate-push.outputs.bumpImageVersion == 'true') }}
        with:
          team-name: ${{ env.productName }}
          project-path: Applications/Copilot
          image: "${{ env.imageName }}:${{ steps.BuildVersion.outputs.buildNumber }}"
          bot-token: ${{ secrets.SVC_BOT_TOKEN }}
          appsettings: "appsettings.json"
          container-name: "copilot"

      - uses: WillowInc/.github/.github/actions/bump-version@main
        name: Bump Prod Image Version
        id: bump-version-prod
        if: ${{ (steps.evaluate-push.outputs.pushToPrdAcr == 'true') && (steps.evaluate-push.outputs.bumpImageVersion == 'true') }}
        with:
          team-name: ${{ env.productName }}
          project-path: Applications/Copilot
          image: "${{ env.imageName }}:${{ steps.BuildVersion.outputs.buildNumber }}"
          bot-token: ${{ secrets.SVC_BOT_TOKEN }}
          appsettings: "appsettings.prd.json"
          container-name: "copilot"

