// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Willow.CommandAndControl.Data;

#nullable disable

namespace Willow.CommandAndControl.Data
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240219053459_ResolvedCommandId")]
    partial class ResolvedCommandId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Willow.CommandAndControl.Data.Models.ActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RequestedCommandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResolvedCommandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.ComplexProperty<Dictionary<string, object>>("UpdatedBy", "Willow.CommandAndControl.Data.Models.ActivityLog.UpdatedBy#User", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.HasIndex("RequestedCommandId");

                    b.HasIndex("ResolvedCommandId");

                    b.ToTable("ActivityLog", (string)null);
                });

            modelBuilder.Entity("Willow.CommandAndControl.Data.Models.RequestedCommand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsCapabilityOf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsHostedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TwinId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.ComplexProperty<Dictionary<string, object>>("StatusUpdatedBy", "Willow.CommandAndControl.Data.Models.RequestedCommand.StatusUpdatedBy#User", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.ToTable("RequestedCommand", (string)null);
                });

            modelBuilder.Entity("Willow.CommandAndControl.Data.Models.ResolvedCommand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RequestedCommandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.ComplexProperty<Dictionary<string, object>>("StatusUpdatedBy", "Willow.CommandAndControl.Data.Models.ResolvedCommand.StatusUpdatedBy#User", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("Id");

                    b.HasIndex("RequestedCommandId");

                    b.ToTable("ResolvedCommand", (string)null);
                });

            modelBuilder.Entity("Willow.CommandAndControl.Data.Models.ActivityLog", b =>
                {
                    b.HasOne("Willow.CommandAndControl.Data.Models.RequestedCommand", "RequestedCommand")
                        .WithMany()
                        .HasForeignKey("RequestedCommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Willow.CommandAndControl.Data.Models.ResolvedCommand", "ResolvedCommand")
                        .WithMany()
                        .HasForeignKey("ResolvedCommandId");

                    b.Navigation("RequestedCommand");

                    b.Navigation("ResolvedCommand");
                });

            modelBuilder.Entity("Willow.CommandAndControl.Data.Models.ResolvedCommand", b =>
                {
                    b.HasOne("Willow.CommandAndControl.Data.Models.RequestedCommand", "RequestedCommand")
                        .WithMany("ResolvedCommands")
                        .HasForeignKey("RequestedCommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestedCommand");
                });

            modelBuilder.Entity("Willow.CommandAndControl.Data.Models.RequestedCommand", b =>
                {
                    b.Navigation("ResolvedCommands");
                });
#pragma warning restore 612, 618
        }
    }
}
