{
  "openapi": "3.0.1",
  "info": {
      "title": "PublicApi",
      "version": "2"
  },
  "paths": {
      "/v2/sites/{siteId}/config/connectorId": {
          "get": {
              "tags": [
                  "AppConfigs"
              ],
              "summary": "Returns the connector id for the currently authenticated application.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "Guid",
                                  "type": "string",
                                  "format": "uuid"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/config": {
          "get": {
              "tags": [
                  "AppConfigs"
              ],
              "summary": "Returns the configuration for the currently authenticated application.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.AppServices.AppConfig.ResponseModels.GetAppConfigResponse"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/config/version": {
          "get": {
              "tags": [
                  "AppConfigs"
              ],
              "summary": "Returns the configuration for the currently authenticated application.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.AppServices.AppConfig.ResponseModels.GetAppConfigVersionResponse"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/config/features": {
          "get": {
              "tags": [
                  "AppConfigs"
              ],
              "summary": "Returns the supported application features for the currently authenticated application.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "title": "String",
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/config/features/scanning/parameters": {
          "get": {
              "tags": [
                  "AppConfigs"
              ],
              "summary": "Returns a list of scan parameters that are relevant to the authenticated application and can be applied to a scan request.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.AppConfig.Models.ScanParameters"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/config/twins": {
          "get": {
              "tags": [
                  "AppConfigs"
              ],
              "summary": "Returns a list of twins that are relevant to the site of the authenticated application.\r\nOptionally filters for versions newer than the specified value.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Number of records to return per page.",
                      "required": true,
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "pageNumber",
                      "in": "query",
                      "description": "Page number. Starts at 1.",
                      "required": true,
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "versionFilter",
                      "in": "query",
                      "description": "Optional. Return twins that are newer than the specified version.",
                      "schema": {
                          "title": "Int64",
                          "type": "integer",
                          "format": "int64",
                          "default": 0
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.AppServices.AppConfig.ResponseModels.GetTwinsResponse"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/config/capabilities": {
          "get": {
              "tags": [
                  "AppConfigs"
              ],
              "summary": "Returns a list of capabilities that are relevant to the authenticated application.\r\nOptionally filters for versions newer than the specified value.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Number of records to return per page.",
                      "required": true,
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "pageNumber",
                      "in": "query",
                      "description": "Page number. Starts at 1.",
                      "required": true,
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "versionFilter",
                      "in": "query",
                      "description": "Optional. Return twins that are newer than the specified version.",
                      "schema": {
                          "title": "Int64",
                          "type": "integer",
                          "format": "int64",
                          "default": 0
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.AppServices.AppConfig.ResponseModels.GetCapabilitiesResponse"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/assets/{assetId}": {
          "get": {
              "tags": [
                  "Assets"
              ],
              "summary": "Returns the details of an ADT asset for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "assetId",
                      "in": "path",
                      "description": "The unique id of an ADT asset",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.V2.AssetDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/categories": {
          "get": {
              "tags": [
                  "Assets"
              ],
              "summary": "Query the list of asset categories of a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of ADT assets",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.V2.AssetTreeCategoryDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/categories/{categoryId}/assets": {
          "get": {
              "tags": [
                  "Assets"
              ],
              "summary": "Query the list of assets based on the given category Id.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "categoryId",
                      "in": "path",
                      "description": "The unique id of the category",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "floorId",
                      "in": "query",
                      "description": "The unique id of the floor — Use Floor endpoint",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "liveDataOnly",
                      "in": "query",
                      "description": "False by default. If set to True, only assets with liveData gets returned",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "includeExtraProperties",
                      "in": "query",
                      "description": "False by default. If set to True, includes detailed information of it's relationship.",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Size of the page — Recommended size: 50 (set to 500 by Default)",
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32",
                          "default": 500
                      }
                  },
                  {
                      "name": "pageIndex",
                      "in": "query",
                      "description": "Index of the page — Starts at zero-index",
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32",
                          "default": 0
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of ADT assets based on the given category Id",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.V2.AssetDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/audit": {
          "post": {
              "tags": [
                  "Audit"
              ],
              "summary": "Creates an audit log for the authenticated application.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "CreateAuditLogRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Audit.RequestModels.CreateAuditLogRequest"
                                  }
                              ],
                              "description": "Represents an audit log."
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "CreateAuditLogRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Audit.RequestModels.CreateAuditLogRequest"
                                  }
                              ],
                              "description": "Represents an audit log."
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "CreateAuditLogRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Audit.RequestModels.CreateAuditLogRequest"
                                  }
                              ],
                              "description": "Represents an audit log."
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/oauth2/token": {
          "post": {
              "tags": [
                  "Auth"
              ],
              "summary": "Once authenticated with your clientId and clientSecret, use the returned accessToken (bearer token) for subsequent calls.",
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "SignInRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Auth.SignInRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "SignInRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Auth.SignInRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "SignInRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Auth.SignInRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.MarketPlace.AppAccountToken"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/devices": {
          "get": {
              "tags": [
                  "Devices"
              ],
              "summary": "Query the list of ADT devices for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of ADT devices",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.V2.DeviceDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/devices/{deviceId}": {
          "get": {
              "tags": [
                  "Devices"
              ],
              "summary": "Returns the details of an ADT device for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "deviceId",
                      "in": "path",
                      "description": "The unique id of a device",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.V2.DeviceDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/equipments": {
          "get": {
              "tags": [
                  "Equipments"
              ],
              "summary": "Query the list ADT Assets of a particular site.",
              "description": "Assets can be filtered by category, by floor or by LiveData flag.\r\nIt is recommend to query the equipment by floor, to avoid timeouts.\r\nPayload can exceed 50Mb.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "categoryId",
                      "in": "query",
                      "description": "The unique id of a category — Use ADT category endpoint",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "floorId",
                      "in": "query",
                      "description": "The unique id of the floor — Use Floor endpoint",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "liveDataOnly",
                      "in": "query",
                      "description": "False by default. If set to True, only assets with liveData gets returned",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "includeExtraProperties",
                      "in": "query",
                      "description": "False by default. If set to True, includes detailed information of it's relationship.",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Size of the page — Recommended size: 50",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "pageIndex",
                      "in": "query",
                      "description": "Index of the page — Starts at zero-index",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of ADT assets",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.V2.AssetDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/insights": {
          "get": {
              "tags": [
                  "Insights"
              ],
              "summary": "Lists all the Insights for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "includeArchivedInsights",
                      "in": "query",
                      "description": "Set to true to include archived insights",
                      "schema": {
                          "title": "Boolean",
                          "type": "boolean",
                          "default": false
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.InsightSimpleDto"
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Insights"
              ],
              "summary": "Creates an insight for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "CreateInsightRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.CreateInsightRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "CreateInsightRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.CreateInsightRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "CreateInsightRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.CreateInsightRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.InsightDetailDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/insights/{insightId}": {
          "get": {
              "tags": [
                  "Insights"
              ],
              "summary": "Gets Insight information for a particular insight and site Id.",
              "operationId": "GetInsight",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "insightId",
                      "in": "path",
                      "description": "The unique id of the insight",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.InsightDetailDto"
                              }
                          }
                      }
                  }
              }
          },
          "put": {
              "tags": [
                  "Insights"
              ],
              "summary": "Updates an existing insight for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "insightId",
                      "in": "path",
                      "description": "The unique id of the insight",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "UpdateInsightRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.UpdateInsightRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "UpdateInsightRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.UpdateInsightRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "UpdateInsightRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.UpdateInsightRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.InsightDetailDto"
                              }
                          }
                      }
                  },
                  "204": {
                      "description": "No Content"
                  }
              }
          },
          "delete": {
              "tags": [
                  "Insights"
              ],
              "summary": "Deletes an insight from a site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "insightId",
                      "in": "path",
                      "description": "The unique id of the insight",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No Content"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/insights/{insightId}/state": {
          "put": {
              "tags": [
                  "Insights"
              ],
              "summary": "Updates the state of an Insight Id for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "insightId",
                      "in": "path",
                      "description": "The unique id of the insight",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "UpdateInsightStateRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.UpdateInsightStateRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "UpdateInsightStateRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.UpdateInsightStateRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "UpdateInsightStateRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Insight.Requests.UpdateInsightStateRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.InsightDetailDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/insights/{insightId}/StatusLog": {
          "get": {
              "tags": [
                  "Insights"
              ],
              "summary": "Get Status Log for an Insight",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "insightId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.InsightStatusLogEntryDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/inspections": {
          "get": {
              "tags": [
                  "Inspections"
              ],
              "summary": "Get site inspections",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.InspectionDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/zones": {
          "get": {
              "tags": [
                  "Inspections"
              ],
              "summary": "Get site zones",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.ZoneDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/zones/{zoneId}/inspections": {
          "get": {
              "tags": [
                  "Inspections"
              ],
              "summary": "Get zone inspections ",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "zoneId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.InspectionDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/inspections/{inspectionId}": {
          "get": {
              "tags": [
                  "Inspections"
              ],
              "summary": "Get inspection",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "inspectionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.InspectionDto"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.InspectionDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/inspections/{inspectionId}/checks/{checkId}/history": {
          "get": {
              "tags": [
                  "Inspections"
              ],
              "summary": "Get check record history",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "inspectionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "checkId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "startDate",
                      "in": "query",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  {
                      "name": "endDate",
                      "in": "query",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "date-time"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.CheckRecordDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/inspections/{inspectionId}/checks/{checkId}/submittedhistory/{count}": {
          "get": {
              "tags": [
                  "Inspections"
              ],
              "summary": "Get latest submitted check history",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "inspectionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "checkId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "count",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.CheckRecordDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/timemachine": {
          "get": {
              "tags": [
                  "LiveData"
              ],
              "summary": "This endpoint returns the time series data for points in an aggregated response according to a defined granularity.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "trendIds",
                      "in": "query",
                      "description": "Comma-separated list of unique trend Ids (eg: 0fcd55ad-251d-4111-bed9-de32c7addb52,7461183c-139f-4e60-95ba-6a6b3d3f9321)",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "start",
                      "in": "query",
                      "description": "Start date and time (eg: startDate=2021-01-20)",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "end",
                      "in": "query",
                      "description": "End date and time (eg: endDate=2021-02-18)",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "granularity",
                      "in": "query",
                      "description": "Interval at which the time series values should be aggregated (eg: granularity=P0DT1H)",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Models.LiveData.PointTimeSeriesDetails"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/livedata": {
          "post": {
              "tags": [
                  "LiveData"
              ],
              "summary": "Sends point data to LiveData.",
              "description": "Sample request:\r\n            \r\n    POST /v{v}/sites/{siteId}/livedata\r\n    {\r\n       \"points\": [\r\n            {\r\n                \"pointId\": \"00000000-0000-0000-0000-000000000000\",\r\n                \"timestamp\": \"1998-08-28T08:11:27.496Z\",\r\n                \"value\": 0\r\n            }\r\n        ]\r\n    }",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "SendLiveDataRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendLiveDataRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "SendLiveDataRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendLiveDataRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "SendLiveDataRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendLiveDataRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendLiveDataResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If payload contains invalid data",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/livedata/telemetry": {
          "post": {
              "tags": [
                  "LiveData"
              ],
              "summary": "Sends telemetry data to LiveData.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "SendTelemetryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendTelemetryRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "SendTelemetryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendTelemetryRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "SendTelemetryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendTelemetryRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "202": {
                      "description": "Accepted",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendTelemetryResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If payload contains invalid data",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          },
          "get": {
              "tags": [
                  "LiveData"
              ],
              "summary": "Gets telemetry data from LiveData.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site.",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "connectorId",
                      "in": "query",
                      "description": "The unique connector id of the site.",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "start",
                      "in": "query",
                      "description": "Start date and time (eg: startDate=2021-01-20)",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "end",
                      "in": "query",
                      "description": "End date and time (eg: endDate=2021-01-21)",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Amount of records to be returned from a single api call.",
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32",
                          "default": 10
                      }
                  },
                  {
                      "name": "continuationToken",
                      "in": "query",
                      "description": "Token used for subsequent paging calls.",
                      "schema": {
                          "title": "String",
                          "type": "string",
                          "default": ""
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.LiveData.Models.GetTelemetryResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/lookupdata/{connectorId}": {
          "post": {
              "tags": [
                  "LookupData"
              ],
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "connectorId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "SaveLookupDataRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LookupData.Models.SaveLookupDataRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "SaveLookupDataRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LookupData.Models.SaveLookupDataRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "SaveLookupDataRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.LookupData.Models.SaveLookupDataRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "202": {
                      "description": "Accepted"
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          }
      },
      "/v2/mapped/sites/{siteId}/tickets": {
          "post": {
              "tags": [
                  "Mapped"
              ],
              "summary": "Upsert Tickets",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "MappedTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedTicketRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "MappedTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedTicketRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "MappedTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedTicketRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.UpsertTicketResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "Bad Request",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.UpsertTicketResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          },
          "get": {
              "tags": [
                  "Mapped"
              ],
              "summary": "Get Tickets by Site Id\r\nAdditional filters, such as ExternalId, SourceId, CreatedAfter can be applied",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "ExternalId",
                      "in": "query",
                      "description": "Ticket external id",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "SourceId",
                      "in": "query",
                      "description": "Ticket source id\r\nsourceId is equivalent to app id",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "CreatedAfter",
                      "in": "query",
                      "description": "Ticket created after UTC date time",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "date-time"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.GetTicketsResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.GetTicketsResponse"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/mapped/sites/{siteId}/tickets/{ticketId}": {
          "get": {
              "tags": [
                  "Mapped"
              ],
              "summary": "Get Ticket by Ticket Id and Site Id",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "ticketId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.GetTicketResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.GetTicketResponse"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/mapped/sites/{siteId}/categoricalData": {
          "get": {
              "tags": [
                  "Mapped"
              ],
              "summary": "Get Categorical Data",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.TicketCategoricalDataResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "Unauthorized",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.TicketCategoricalDataResponse"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/mapped/customers/{customerId}/twinsWithRelationships": {
          "get": {
              "tags": [
                  "Mapped"
              ],
              "parameters": [
                  {
                      "name": "customerId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32",
                          "default": 50
                      }
                  },
                  {
                      "name": "pageNumber",
                      "in": "query",
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32",
                          "default": 1
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.TwinWithRelationships"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/mapped/sites/{siteId}/twinsWithRelationships": {
          "get": {
              "tags": [
                  "Mapped"
              ],
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32",
                          "default": 50
                      }
                  },
                  {
                      "name": "pageNumber",
                      "in": "query",
                      "schema": {
                          "title": "Int32",
                          "type": "integer",
                          "format": "int32",
                          "default": 1
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.TwinWithRelationships"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/points": {
          "get": {
              "tags": [
                  "Points"
              ],
              "summary": "Query the list of ADT points of a particular site.",
              "description": "It is recommend to query the points using pagination, to avoid timeouts.\r\nPayload can exceed 50Mb.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "includeAssets",
                      "in": "query",
                      "description": "False by default. If set to True, only assets with liveData gets returned",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Size of the page — Recommended size: 1000",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "pageIndex",
                      "in": "query",
                      "description": "Index of the page — Starts at zero-index",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of ADT points",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.V2.PointDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/points/{id}": {
          "get": {
              "tags": [
                  "Points"
              ],
              "summary": "Retrieves the details for a specific point.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "id",
                      "in": "path",
                      "description": "The unique id of the point",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a ADT point",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.V2.PointDto"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/points/trendId/{trendId}": {
          "get": {
              "tags": [
                  "Points"
              ],
              "summary": "Retrieves the details for a specific point by the trend id.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "trendId",
                      "in": "path",
                      "description": "The trend id of the point",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns an ADT point",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.V2.PointDto"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/points/twinId/{twinId}": {
          "get": {
              "tags": [
                  "Points"
              ],
              "summary": "Retrieves the details for a specific point by twin id.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "twinId",
                      "in": "path",
                      "description": "The unique twin id of the point",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns an ADT point",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.V2.PointDto"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/points/externalId": {
          "get": {
              "tags": [
                  "Points"
              ],
              "summary": "Retrieves the details for a specific point by external id.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "externalId",
                      "in": "query",
                      "description": "The external id of the point",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns an ADT point",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.V2.PointDto"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/scan": {
          "post": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Requests a scan for the specified site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "CreateScanRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.RequestModels.CreateScanRequest"
                                  }
                              ],
                              "description": "Represents a scan request."
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "CreateScanRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.RequestModels.CreateScanRequest"
                                  }
                              ],
                              "description": "Represents a scan request."
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "CreateScanRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.RequestModels.CreateScanRequest"
                                  }
                              ],
                              "description": "Represents a scan request."
                          }
                      }
                  }
              },
              "responses": {
                  "202": {
                      "description": "Accepted",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "Guid",
                                  "type": "string",
                                  "format": "uuid"
                              }
                          }
                      }
                  },
                  "409": {
                      "description": "Conflict",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  },
                  "500": {
                      "description": "Server Error"
                  }
              }
          },
          "get": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Returns a list of scans for the specified site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.ResponseModels.GetScanSummaryResponse"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/scan/{scanId}": {
          "get": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Returns the details for the specified scan.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "scanId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.ResponseModels.GetScanDetailsResponse"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Removes the specified scan including its scan results.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "scanId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No Content"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/scan/pending": {
          "get": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Returns the details for the current pending scan if any.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.ResponseModels.GetScanDetailsResponse"
                              }
                          }
                      }
                  },
                  "204": {
                      "description": "No Content"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/scan/{scanId}/status": {
          "get": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Returns the status for the specified scan.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "scanId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.ResponseModels.GetScanStatusResponse"
                              }
                          }
                      }
                  }
              }
          },
          "put": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Updates the status for the specified scan.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "scanId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "UpdateScanStatusRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.RequestModels.UpdateScanStatusRequest"
                                  }
                              ],
                              "description": "Represents a request to update a scan's status."
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "UpdateScanStatusRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.RequestModels.UpdateScanStatusRequest"
                                  }
                              ],
                              "description": "Represents a request to update a scan's status."
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "UpdateScanStatusRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.RequestModels.UpdateScanStatusRequest"
                                  }
                              ],
                              "description": "Represents a request to update a scan's status."
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "409": {
                      "description": "Conflict",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/scan/{scanId}/result": {
          "post": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Uploads a scan result for the specified scan.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "scanId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "Payload": {
                                      "title": "IFormFile",
                                      "type": "string",
                                      "description": "Gets and sets the content of the scan result.",
                                      "format": "binary"
                                  },
                                  "Type": {
                                      "title": "String",
                                      "type": "string",
                                      "description": "Gets and sets the Type of the scan result."
                                  }
                              }
                          },
                          "encoding": {
                              "Payload": {
                                  "style": "form"
                              },
                              "Type": {
                                  "style": "form"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "409": {
                      "description": "Conflict",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          },
          "get": {
              "tags": [
                  "Scanning"
              ],
              "summary": "Downloads the scan result(s) for the specified scan.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "scanId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "409": {
                      "description": "Conflict",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites": {
          "get": {
              "tags": [
                  "Sites"
              ],
              "summary": "Lists all the sites that the authenticated user has access to.",
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.SiteDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/floors": {
          "get": {
              "tags": [
                  "Sites"
              ],
              "summary": "Lists all the floors for a given site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Page size (number of elements to return - integer)",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "continuationToken",
                      "in": "query",
                      "description": "String used for pagination. Submit the Continuation Token returned in the previous request to fetch the next page of results",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.FloorDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/isadt": {
          "get": {
              "tags": [
                  "Sites"
              ],
              "summary": "Checks to see if site is ADT enabled or not.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns true if site is ADT, otherwise false",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "Boolean",
                                  "type": "boolean"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/points/{pointId}/trendlog": {
          "get": {
              "tags": [
                  "Trendlog"
              ],
              "summary": "This endpoint returns an array of timestamped Point values.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "pointId",
                      "in": "path",
                      "description": "The unique id of the point",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "startDate",
                      "in": "query",
                      "description": "Start date and time (eg: startDate=2021-04-23T22:12:21.047Z)",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "endDate",
                      "in": "query",
                      "description": "End date and time (eg: endDate=2021-04-28T22:12:21.047Z)",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TrendlogDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/trendlogs": {
          "post": {
              "tags": [
                  "Trendlog"
              ],
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "startDate",
                      "in": "query",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "endDate",
                      "in": "query",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "Guid[]",
                              "type": "array",
                              "items": {
                                  "title": "Guid",
                                  "type": "string",
                                  "format": "uuid"
                              }
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "Guid[]",
                              "type": "array",
                              "items": {
                                  "title": "Guid",
                                  "type": "string",
                                  "format": "uuid"
                              }
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "Guid[]",
                              "type": "array",
                              "items": {
                                  "title": "Guid",
                                  "type": "string",
                                  "format": "uuid"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TrendlogDto"
                                  }
                              }
                          }
                      }
                  }
              },
              "deprecated": true
          },
          "get": {
              "tags": [
                  "Trendlog"
              ],
              "summary": "This endpoint shows the trendlogs for an array of unique point Ids.",
              "description": "Maximum allowed number of pointIds is 500.\r\nSample request:\r\n            \r\n    GET /v{v}/sites/{siteId}/trendlogs?startDate=1998-08-28 00:16&endDate=1998-08-28 00:31&pointIds=00000000-0000-0000-0000-000000000000&pointIds=00000000-0000-0000-0000-000000000001",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "startDate",
                      "in": "query",
                      "description": "Start date and time (eg: startDate=1998-08-28 00:16",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "endDate",
                      "in": "query",
                      "description": "End date and time (eg: endDate=1998-08-28 00:31",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "pointIds",
                      "in": "query",
                      "description": "Array of unique point Ids",
                      "schema": {
                          "title": "Guid[]",
                          "type": "array",
                          "items": {
                              "title": "Guid",
                              "type": "string",
                              "format": "uuid"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of trendlogs",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TrendlogDto"
                                  }
                              }
                          }
                      }
                  },
                  "414": {
                      "description": "If the uri is too long",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/models": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Query the list of dtmi models.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of dtmi models",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.AdtModel"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/models/{id}": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Retrieves the details for a model.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "id",
                      "in": "path",
                      "description": "The unique id of the model",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a dtmi model",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.AdtModel"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/models/search": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Search available dtmi ids by query.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "query",
                      "in": "query",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "title": "String",
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Query the list of digital twins.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site.",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of digital twins",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Twins"
              ],
              "summary": "Creates a digital twin.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "TwinDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinDto"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "TwinDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinDto"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "TwinDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinDto"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Returns the newly created twin",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TwinDto"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If payload contains invalid data",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/{id}": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Retrieves a specific digital twin.",
              "operationId": "GetTwin",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site.",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "id",
                      "in": "path",
                      "description": "The unique twin id.",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a digital twin",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TwinDto"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/query": {
          "post": {
              "tags": [
                  "Twins"
              ],
              "summary": "Query twins.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "TwinQueryDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinQueryDto"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "TwinQueryDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinQueryDto"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "TwinQueryDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinQueryDto"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Returns a collection of digital twins",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/withrelationships": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Query the list of digital twins with its relationship.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection twin with its relationship",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.TwinWithRelationships"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Twins"
              ],
              "summary": "Query the list of digital twins with its relationship.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "A collection of twin ids",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "IEnumerable`1",
                              "type": "array",
                              "items": {
                                  "title": "String",
                                  "type": "string"
                              }
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "IEnumerable`1",
                              "type": "array",
                              "items": {
                                  "title": "String",
                                  "type": "string"
                              }
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "IEnumerable`1",
                              "type": "array",
                              "items": {
                                  "title": "String",
                                  "type": "string"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Returns a collection of twins with its relationship",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.TwinWithRelationships"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/{id}/relationships": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Query all relationship of the specified twin.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "id",
                      "in": "path",
                      "description": "The unique id of the twin",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of relationship",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinRelationshipDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/{id}/relationships/{relationshipId}": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Retrieves a specific twin relationship.",
              "operationId": "GetTwinRelationship",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "id",
                      "in": "path",
                      "description": "The id of the twin",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "relationshipId",
                      "in": "path",
                      "description": "The id of the twin relationship",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a single twin relationship",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TwinRelationshipDto"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/relationships": {
          "post": {
              "tags": [
                  "Twins"
              ],
              "summary": "Creates a digital twin relationship.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "TwinRelationshipDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinRelationshipDto"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "TwinRelationshipDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinRelationshipDto"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "TwinRelationshipDto",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TwinRelationshipDto"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Returns the newly created relationship",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TwinRelationshipDto"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If payload contains invalid data",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/{twinId}/relationships/{relationshipId}": {
          "delete": {
              "tags": [
                  "Twins"
              ],
              "summary": "Deletes a digital twin relationship.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "twinId",
                      "in": "path",
                      "description": "The unique id of the twin",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "relationshipId",
                      "in": "path",
                      "description": "The id of the relationship",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No Content"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/{twinId}": {
          "patch": {
              "tags": [
                  "Twins"
              ],
              "summary": "Patches a digital twin.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "twinId",
                      "in": "path",
                      "description": "The unique id of the twin",
                      "required": true,
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "If-Match",
                      "in": "header",
                      "description": "Optional. Only perform the operation if the entity's ETag matches this optional ETag or * (Azure.ETag.All) is provided",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "UserId",
                      "in": "header",
                      "description": "Optional",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "description": "The json describing the patch operation. Supported ops are: add, replace, remove. See https://jsonpatch.com",
                  "content": {
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/JsonPatch"
                          }
                      }
                  }
              },
              "responses": {
                  "204": {
                      "description": "No Content"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/closestWithCustomProperty": {
          "post": {
              "tags": [
                  "Twins"
              ],
              "summary": "For the given twins, finds the closest twin that has the specified custom property present, by traversing the specified relationships.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "The parameters to use when querying twins",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "ClosestWithCustomPropertyQuery",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.ClosestWithCustomPropertyQuery"
                                  }
                              ],
                              "description": "Represents a set of parameters for querying twins where a specified custom property is present"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "ClosestWithCustomPropertyQuery",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.ClosestWithCustomPropertyQuery"
                                  }
                              ],
                              "description": "Represents a set of parameters for querying twins where a specified custom property is present"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "ClosestWithCustomPropertyQuery",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.ClosestWithCustomPropertyQuery"
                                  }
                              ],
                              "description": "Represents a set of parameters for querying twins where a specified custom property is present"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Returns original twin ids and corresponding resolved twin ids, including the value of the specified custom property on the resolved twin",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TwinMatchResultDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/twins/paged": {
          "get": {
              "tags": [
                  "Twins"
              ],
              "summary": "Retrieves a page of digital twins.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "continuationToken",
                      "in": "header",
                      "description": "Token used for pagination. Submit the continuation token returned in the previous response to fetch the next page of results.",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TwinsPageDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/customers/{customerId}/sites/{siteId}/users": {
          "get": {
              "tags": [
                  "Users"
              ],
              "summary": "This endpoint gets a user's id for a particular email, filtering by customer and site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "customerId",
                      "in": "path",
                      "description": "The unique id of a customer",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "email",
                      "in": "query",
                      "description": "The email address of the user whose id to return",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "Guid",
                                  "type": "string",
                                  "format": "uuid"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/customers/{customerId}/sites/{siteId}/userdetails": {
          "get": {
              "tags": [
                  "Users"
              ],
              "summary": "This endpoint gets a list of users for a particular customer and site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "customerId",
                      "in": "path",
                      "description": "The unique id of the customer",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "email",
                      "in": "query",
                      "description": "The email address of the user to return. When blank, all customer users for the site are returned.",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.CustomerUserDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Not Found",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets": {
          "get": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Lists all the tickets for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "externalId",
                      "in": "query",
                      "description": "Filter tickets for those with the given externalId",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "sourceId",
                      "in": "query",
                      "description": "Filter tickets for those with the given sourceId",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "sourceType",
                      "in": "query",
                      "description": "Filter tickets for those with the given sourceType",
                      "schema": {
                          "title": "Nullable`1",
                          "allOf": [
                              {
                                  "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketSourceType"
                              }
                          ]
                      }
                  },
                  {
                      "name": "page",
                      "in": "query",
                      "description": "Page from which to start reading records",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Page size defines the number of elements to return",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "createdAfter",
                      "in": "query",
                      "description": "Created after which date (eg: createdAfter=2021-04-23T22:12:21.047Z)",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "date-time"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TicketSimpleDto"
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Creates a new ticket.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "CreateTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.CreateTicketRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "CreateTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.CreateTicketRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "CreateTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.CreateTicketRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TicketDetailDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets/scheduled": {
          "get": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Lists all the scheduled tickets for a particular site.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "externalId",
                      "in": "query",
                      "description": "Filter tickets for those with the given externalId",
                      "schema": {
                          "title": "String",
                          "type": "string"
                      }
                  },
                  {
                      "name": "sourceId",
                      "in": "query",
                      "description": "Filter tickets for those with the given sourceId",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "sourceType",
                      "in": "query",
                      "description": "Filter tickets for those with the given sourceType",
                      "schema": {
                          "title": "Nullable`1",
                          "allOf": [
                              {
                                  "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketSourceType"
                              }
                          ]
                      }
                  },
                  {
                      "name": "page",
                      "in": "query",
                      "description": "Page from which to start reading records",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "Page size defines the number of elements to return",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "createdAfter",
                      "in": "query",
                      "description": "Created after which date (eg: createdAfter=2021-04-23T22:12:21.047Z)",
                      "schema": {
                          "title": "Nullable`1",
                          "type": "string",
                          "format": "date-time"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "List`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TicketSimpleDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets/{ticketId}": {
          "get": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Retrieves the details for a specific ticket.",
              "operationId": "GetTicket",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "ticketId",
                      "in": "path",
                      "description": "The id of a ticket",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TicketDetailDto"
                              }
                          }
                      }
                  }
              }
          },
          "put": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Updates a ticket.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "ticketId",
                      "in": "path",
                      "description": "The id of a ticket",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "UpdateTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.UpdateTicketRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "UpdateTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.UpdateTicketRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "UpdateTicketRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.UpdateTicketRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TicketDetailDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets/batch": {
          "post": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Creates multiple tickets.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "CreateTicketBatchRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.CreateTicketBatchRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "CreateTicketBatchRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.CreateTicketBatchRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "CreateTicketBatchRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.CreateTicketBatchRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IEnumerable`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TicketDetailDto"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/reporters": {
          "get": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Lists all the reporters.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IList`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.ReporterDto"
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "post": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Creates a reporter.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "CreateReporterRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Reporters.CreateReporterRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "CreateReporterRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Reporters.CreateReporterRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "CreateReporterRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Reporters.CreateReporterRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Returns the newly created reporter",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.ReporterDto"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If request body contains invalid data"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/reporters/{reporterId}": {
          "put": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Updates a reporter.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "reporterId",
                      "in": "path",
                      "description": "The id of a reporter",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "UpdateReporterRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Reporters.UpdateReporterRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "UpdateReporterRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Reporters.UpdateReporterRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "UpdateReporterRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Reporters.UpdateReporterRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.ReporterDto"
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Deletes a reporter.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "reporterId",
                      "in": "path",
                      "description": "The id of a reporter",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No Content"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets/categories": {
          "get": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Lists all the tickets categories.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a collection of ticket categories.",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "title": "IList`1",
                                  "type": "array",
                                  "items": {
                                      "$ref": "#/components/schemas/PublicApi.Dto.TicketCategoryDto"
                                  }
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "If site does not exist"
                  }
              }
          },
          "post": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Creates a ticket category",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "CreateTicketCategoryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketCategories.CreateTicketCategoryRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "CreateTicketCategoryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketCategories.CreateTicketCategoryRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "CreateTicketCategoryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketCategories.CreateTicketCategoryRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Returns the newly created ticket category",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TicketCategoryDto"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If request body contains invalid data"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets/categories/{ticketCategoryId}": {
          "get": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Retrieves a specific ticket category.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "ticketCategoryId",
                      "in": "path",
                      "description": "Id of a ticket category",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Returns a ticket categories",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TicketCategoryDto"
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Deletes a ticket category",
              "description": "Ticket categories with a default siteId (\"00000000-0000-0000-0000-000000000000\") cannot be removed.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "ticketCategoryId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "204": {
                      "description": "No Content"
                  }
              }
          },
          "put": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Updates a ticket category",
              "description": "Ticket categories with a default siteId (\"00000000-0000-0000-0000-000000000000\") cannot be updated.",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "ticketCategoryId",
                      "in": "path",
                      "description": "The unique id of a ticket category",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "UpdateTicketCategoryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketCategories.UpdateTicketCategoryRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "UpdateTicketCategoryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketCategories.UpdateTicketCategoryRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "UpdateTicketCategoryRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketCategories.UpdateTicketCategoryRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "204": {
                      "description": "No Content"
                  },
                  "400": {
                      "description": "If request body contains invalid data"
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets/{ticketId}/attachments": {
          "post": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Attaches a file to a ticket",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  },
                  {
                      "name": "ticketId",
                      "in": "path",
                      "description": "The unique id of the ticket to add the attachment to",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "The file that will be attached to the specified ticket",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "CreateTicketAttachmentRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketAttachments.CreateTicketAttachmentRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "CreateTicketAttachmentRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketAttachments.CreateTicketAttachmentRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "CreateTicketAttachmentRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.TicketAttachments.CreateTicketAttachmentRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "201": {
                      "description": "Created",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Dto.TicketAttachmentDto"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets/upsertCustomProperties": {
          "post": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Upserts the given custom properties on the specified tickets",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "A collection of ticket ids and custom properties to upsert for each",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "UpsertTicketCustomPropertiesRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.UpsertTicketCustomPropertiesRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "UpsertTicketCustomPropertiesRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.UpsertTicketCustomPropertiesRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "UpsertTicketCustomPropertiesRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.UpsertTicketCustomPropertiesRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Services.TicketCustomProps.TicketCustomPropertiesResponse"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/v2/sites/{siteId}/tickets/deleteCustomProperties": {
          "post": {
              "tags": [
                  "Workflow"
              ],
              "summary": "Removes the custom properties with the given keys on the specified tickets",
              "parameters": [
                  {
                      "name": "siteId",
                      "in": "path",
                      "description": "The unique id of the site",
                      "required": true,
                      "schema": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "description": "A collection of ticket ids, and keys of the custom properties to remove from each",
                  "content": {
                      "application/json": {
                          "schema": {
                              "title": "DeleteTicketCustomPropertiesRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.DeleteTicketCustomPropertiesRequest"
                                  }
                              ]
                          }
                      },
                      "text/json": {
                          "schema": {
                              "title": "DeleteTicketCustomPropertiesRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.DeleteTicketCustomPropertiesRequest"
                                  }
                              ]
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "title": "DeleteTicketCustomPropertiesRequest",
                              "allOf": [
                                  {
                                      "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.DeleteTicketCustomPropertiesRequest"
                                  }
                              ]
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/PublicApi.Services.TicketCustomProps.TicketCustomPropertiesResponse"
                              }
                          }
                      }
                  }
              }
          }
      }
  },
  "components": {
      "schemas": {
          "Json.Patch.OperationType": {
              "title": "OperationType",
              "enum": [
                  "unknown",
                  "add",
                  "remove",
                  "replace",
                  "move",
                  "copy",
                  "test"
              ],
              "type": "string"
          },
          "Json.Patch.PatchOperation": {
              "title": "PatchOperation",
              "type": "object",
              "properties": {
                  "op": {
                      "title": "OperationType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Json.Patch.OperationType"
                          }
                      ],
                      "readOnly": true
                  },
                  "from": {
                      "title": "JsonPointer",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Json.Pointer.JsonPointer"
                          }
                      ],
                      "nullable": true,
                      "readOnly": true
                  },
                  "path": {
                      "title": "JsonPointer",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Json.Pointer.JsonPointer"
                          }
                      ],
                      "nullable": true,
                      "readOnly": true
                  },
                  "value": {
                      "title": "JsonNode",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                          }
                      ],
                      "nullable": true,
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Json.Pointer.JsonPointer": {
              "title": "JsonPointer",
              "type": "object",
              "properties": {
                  "segments": {
                      "title": "PointerSegment[]",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/Json.Pointer.PointerSegment"
                      },
                      "nullable": true,
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "Json.Pointer.PointerSegment": {
              "title": "PointerSegment",
              "type": "object",
              "properties": {
                  "value": {
                      "title": "String",
                      "type": "string",
                      "nullable": true,
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "JsonPatch": {
              "type": "array",
              "items": {
                  "$ref": "#/components/schemas/Operation"
              },
              "description": "Array of operations to perform"
          },
          "Marketplace.AppServices.Api.Models.Scanning.ScanStatus": {
              "title": "ScanStatus",
              "enum": [
                  "requested",
                  "started",
                  "completed",
                  "failed"
              ],
              "type": "string",
              "description": "Specifies the allowable status for scans."
          },
          "Microsoft.AspNetCore.Mvc.ProblemDetails": {
              "title": "ProblemDetails",
              "type": "object",
              "properties": {
                  "type": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "title": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "status": {
                      "title": "Nullable`1",
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                  },
                  "detail": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "instance": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": {
                  "title": "Object"
              }
          },
          "Operation": {
              "type": "object",
              "properties": {
                  "op": {
                      "type": "string"
                  },
                  "value": {
                      "type": "string"
                  },
                  "path": {
                      "type": "string"
                  }
              }
          },
          "PublicApi.Dto.CustomerUserDto": {
              "title": "CustomerUserDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "firstName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "lastName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "phone": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "status": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "company": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.FloorDto": {
              "title": "FloorDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "code": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.InsightDetailDto": {
              "title": "InsightDetailDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "customerId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "sequenceNumber": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "floorCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "equipmentId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "type": {
                      "title": "InsightType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightType"
                          }
                      ]
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "recommendation": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "impactScores": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.ImpactScore"
                      },
                      "nullable": true
                  },
                  "priority": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "status": {
                      "title": "OldInsightStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.OldInsightStatus"
                          }
                      ],
                      "deprecated": true
                  },
                  "lastStatus": {
                      "title": "InsightStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightStatus"
                          }
                      ]
                  },
                  "state": {
                      "title": "InsightState",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightState"
                          }
                      ]
                  },
                  "createdDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "updatedDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "occurredDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "detectedDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalStatus": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalMetadata": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "ruleName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "ruleId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "dependencies": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.Dependency"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.InsightSimpleDto": {
              "title": "InsightSimpleDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "sequenceNumber": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "floorCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "equipmentId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "type": {
                      "title": "InsightType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightType"
                          }
                      ]
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "priority": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "status": {
                      "title": "OldInsightStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.OldInsightStatus"
                          }
                      ],
                      "deprecated": true
                  },
                  "lastStatus": {
                      "title": "InsightStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightStatus"
                          }
                      ]
                  },
                  "state": {
                      "title": "InsightState",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightState"
                          }
                      ]
                  },
                  "occurredDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "updatedDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalStatus": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalMetadata": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "ruleName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "ruleId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "dependencies": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.Dependency"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.InsightStatusLogEntryDto": {
              "title": "InsightStatusLogEntryDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "description": "Status Log Id",
                      "format": "uuid"
                  },
                  "insightId": {
                      "title": "Guid",
                      "type": "string",
                      "description": "Insight Id that this status log belongs to",
                      "format": "uuid"
                  },
                  "sourceType": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightSourceType"
                          }
                      ],
                      "description": "SourceType of the status log",
                      "nullable": true
                  },
                  "sourceId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "SourceId of the status log",
                      "format": "uuid",
                      "nullable": true
                  },
                  "status": {
                      "title": "InsightStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightStatus"
                          }
                      ],
                      "description": "Status of the Insight"
                  },
                  "createdDateTime": {
                      "title": "DateTime",
                      "type": "string",
                      "description": "CreatedDateTime of the status log",
                      "format": "date-time"
                  },
                  "reason": {
                      "title": "String",
                      "type": "string",
                      "description": "Reason for the status change",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.PropertyDto": {
              "title": "PropertyDto",
              "type": "object",
              "properties": {
                  "displayName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "value": {
                      "title": "Object",
                      "nullable": true
                  },
                  "kind": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.RelationshipQuery": {
              "title": "RelationshipQuery",
              "type": "object",
              "properties": {
                  "followAny": {
                      "title": "String[]",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  },
                  "toModel": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.ReporterDto": {
              "title": "ReporterDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "phone": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "company": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.SiteDto": {
              "title": "SiteDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "customerId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid",
                      "deprecated": true
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "tzid": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "location": {
                      "title": "SiteLocationDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Dto.SiteLocationDto"
                          }
                      ],
                      "nullable": true
                  },
                  "regionId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true,
                      "deprecated": true
                  },
                  "connectorId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.SiteLocationDto": {
              "title": "SiteLocationDto",
              "type": "object",
              "properties": {
                  "address": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "postCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "suburb": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "state": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "country": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TicketAttachmentDto": {
              "title": "TicketAttachmentDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "type": {
                      "title": "TicketAttachmentType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketAttachmentType"
                          }
                      ]
                  },
                  "fileName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "createdDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TicketCategoryDto": {
              "title": "TicketCategoryDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TicketDetailDto": {
              "title": "TicketDetailDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "customerId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "floorCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "sequenceNumber": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "priority": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "status": {
                      "title": "TicketStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketStatus"
                          }
                      ]
                  },
                  "issueType": {
                      "title": "TicketIssueType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketIssueType"
                          }
                      ]
                  },
                  "issueId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "issueName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "cause": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "solution": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "reporterName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterPhone": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterEmail": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterCompany": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "assigneeType": {
                      "title": "TicketAssigneeType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketAssigneeType"
                          }
                      ]
                  },
                  "assigneeId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "dueDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "createdDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "updatedDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "startedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "resolvedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "closedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "sourceType": {
                      "title": "TicketSourceType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketSourceType"
                          }
                      ]
                  },
                  "sourceId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalStatus": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalMetadata": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "category": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "categoryId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "externalCreatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalUpdatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "lastUpdatedByExternalSource": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "summary": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "latitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "longitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "customProperties": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string",
                          "nullable": true
                      },
                      "nullable": true
                  },
                  "extendableSearchablePropertyKeys": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  },
                  "attachments": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.TicketAttachmentDto"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TicketSimpleDto": {
              "title": "TicketSimpleDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "floorCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "sequenceNumber": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "priority": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "status": {
                      "title": "TicketStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketStatus"
                          }
                      ]
                  },
                  "issueType": {
                      "title": "TicketIssueType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketIssueType"
                          }
                      ]
                  },
                  "issueId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "issueName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "summary": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "reporterName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterPhone": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterEmail": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterCompany": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "assigneeType": {
                      "title": "TicketAssigneeType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketAssigneeType"
                          }
                      ]
                  },
                  "assigneeId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "sourceType": {
                      "title": "TicketSourceType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketSourceType"
                          }
                      ]
                  },
                  "sourceId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "dueDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "createdDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "updatedDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "startedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "resolvedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "closedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "categoryId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "externalCreatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalUpdatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "lastUpdatedByExternalSource": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "scheduledDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "latitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "longitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "customProperties": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string",
                          "nullable": true
                      },
                      "nullable": true
                  },
                  "extendableSearchablePropertyKeys": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TrendlogDto": {
              "title": "TrendlogDto",
              "type": "object",
              "properties": {
                  "continuationToken": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "point": {
                      "title": "TrendlogPointDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Dto.TrendlogPointDto"
                          }
                      ],
                      "nullable": true
                  },
                  "data": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.TrendlogItemDto"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TrendlogItemDto": {
              "title": "TrendlogItemDto",
              "type": "object",
              "properties": {
                  "timestamp": {
                      "title": "DateTimeOffset",
                      "type": "string",
                      "format": "date-time"
                  },
                  "value": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TrendlogPointDto": {
              "title": "TrendlogPointDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TwinDto": {
              "title": "TwinDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "metadata": {
                      "title": "TwinMetadataDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Dto.TwinMetadataDto"
                          }
                      ],
                      "nullable": true
                  }
              },
              "additionalProperties": {
                  "title": "Object"
              }
          },
          "PublicApi.Dto.TwinMatchResultDto": {
              "title": "TwinMatchResultDto",
              "type": "object",
              "properties": {
                  "matchedTwins": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.TwinMatchDto"
                      },
                      "description": "Twin matches where matches were resolved.",
                      "nullable": true
                  },
                  "unmatchedTwins": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Twin ids for which no matches were resolved.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Result set representing matched and unmatched twins for PublicApi.Models.DigitalTwin.ClosestWithCustomPropertyQuery."
          },
          "PublicApi.Dto.TwinMetadataDto": {
              "title": "TwinMetadataDto",
              "type": "object",
              "properties": {
                  "modelId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TwinQueryDto": {
              "title": "TwinQueryDto",
              "type": "object",
              "properties": {
                  "rootModels": {
                      "title": "String[]",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  },
                  "fromCache": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "restrictToSite": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "restrictWithChildren": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "relationships": {
                      "title": "RelationshipQuery",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Dto.RelationshipQuery"
                          }
                      ],
                      "nullable": true
                  },
                  "floors": {
                      "title": "String[]",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TwinRelationshipDto": {
              "title": "TwinRelationshipDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "targetId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "sourceId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "customProperties": {
                      "title": "IDictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "Object"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.TwinsPageDto": {
              "title": "TwinsPageDto",
              "type": "object",
              "properties": {
                  "content": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.TwinDto"
                      },
                      "nullable": true
                  },
                  "continuationToken": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.V2.AssetDto": {
              "title": "AssetDto",
              "type": "object",
              "properties": {
                  "modelId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "hasLiveData": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "tags": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.V2.TagDto"
                      },
                      "nullable": true
                  },
                  "pointTags": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.V2.TagDto"
                      },
                      "nullable": true
                  },
                  "categoryId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "categoryName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "floorId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "geometry": {
                      "title": "Int64[]",
                      "type": "array",
                      "items": {
                          "title": "Int64",
                          "type": "integer",
                          "format": "int64"
                      },
                      "nullable": true
                  },
                  "identifier": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "forgeViewerModelId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "points": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.V2.PointDto"
                      },
                      "nullable": true
                  },
                  "parentId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "relationships": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "List`1",
                          "type": "array",
                          "items": {
                              "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.TwinWithRelationships"
                          },
                          "nullable": true
                      },
                      "nullable": true
                  },
                  "properties": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/PublicApi.Dto.PropertyDto"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.V2.AssetSimpleDto": {
              "title": "AssetSimpleDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "categoryName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.V2.AssetTreeCategoryDto": {
              "title": "AssetTreeCategoryDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "categories": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.V2.AssetTreeCategoryDto"
                      },
                      "nullable": true
                  },
                  "assetCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.V2.DeviceDto": {
              "title": "DeviceDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "modelId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "registrationId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "registrationKey": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "isEnabled": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "isDetected": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "points": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.V2.PointDto"
                      },
                      "nullable": true
                  },
                  "properties": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/PublicApi.Dto.PropertyDto"
                      },
                      "nullable": true
                  },
                  "connectorId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.V2.PointDto": {
              "title": "PointDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "modelId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "trendId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "tags": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.V2.TagDto"
                      },
                      "nullable": true
                  },
                  "type": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "currentValue": {
                      "title": "CurrentValue",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.CurrentValue"
                          }
                      ],
                      "nullable": true
                  },
                  "displayPriority": {
                      "title": "Int64",
                      "type": "integer",
                      "format": "int64"
                  },
                  "assets": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Dto.V2.AssetSimpleDto"
                      },
                      "nullable": true
                  },
                  "isEnabled": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "isDetected": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "deviceId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "trendInterval": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "categoryName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "properties": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "$ref": "#/components/schemas/PublicApi.Dto.PropertyDto"
                      },
                      "nullable": true
                  },
                  "metadata": {
                      "title": "Object",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Dto.V2.TagDto": {
              "title": "TagDto",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "feature": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.AppConfig.Models.ScanParameters": {
              "title": "ScanParameters",
              "type": "object",
              "properties": {
                  "parameters": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.MarketPlace.ScanRequestParameter"
                      },
                      "description": "Gets and sets the scan parameters if any.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Represents the configured scan parameters for the application."
          },
          "PublicApi.Features.Auth.SignInRequest": {
              "title": "SignInRequest",
              "type": "object",
              "properties": {
                  "clientId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "clientSecret": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Insight.Requests.CreateInsightRequest": {
              "title": "CreateInsightRequest",
              "type": "object",
              "properties": {
                  "floorCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "equipmentId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "type": {
                      "title": "InsightType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightType"
                          }
                      ]
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "recommendation": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "impactScores": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.ImpactScore"
                      },
                      "nullable": true
                  },
                  "priority": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "state": {
                      "title": "InsightState",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightState"
                          }
                      ]
                  },
                  "occurredDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "detectedDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalStatus": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalMetadata": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "ruleName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "occurrenceCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "ruleId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "primaryModelId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "insightOccurrences": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightOccurrence"
                      },
                      "nullable": true
                  },
                  "dependencies": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.Dependency"
                      },
                      "nullable": true
                  },
                  "points": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.Point"
                      },
                      "nullable": true
                  },
                  "locations": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Insight.Requests.UpdateInsightRequest": {
              "title": "UpdateInsightRequest",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "recommendation": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "impactScores": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.ImpactScore"
                      },
                      "nullable": true
                  },
                  "priority": {
                      "title": "Nullable`1",
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                  },
                  "type": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightType"
                          }
                      ],
                      "nullable": true
                  },
                  "state": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightState"
                          }
                      ],
                      "nullable": true
                  },
                  "status": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.OldInsightStatus"
                          }
                      ],
                      "nullable": true,
                      "deprecated": true
                  },
                  "lastStatus": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightStatus"
                          }
                      ],
                      "nullable": true
                  },
                  "occurredDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "detectedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalStatus": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalMetadata": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "occurrenceCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "primaryModelId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "ruleName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "insightOccurrences": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightOccurrence"
                      },
                      "nullable": true
                  },
                  "dependencies": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.Dependency"
                      },
                      "nullable": true
                  },
                  "points": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.Insight.Point"
                      },
                      "nullable": true
                  },
                  "locations": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Insight.Requests.UpdateInsightStateRequest": {
              "title": "UpdateInsightStateRequest",
              "type": "object",
              "properties": {
                  "state": {
                      "title": "InsightState",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Insight.InsightState"
                          }
                      ]
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Inspections.Dto.CheckDto": {
              "title": "CheckDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "inspectionId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "sortOrder": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "type": {
                      "title": "CheckType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Inspections.Enums.CheckType"
                          }
                      ]
                  },
                  "typeValue": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "decimalPlaces": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "minValue": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "maxValue": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "multiplier": {
                      "title": "Double",
                      "type": "number",
                      "format": "double"
                  },
                  "dependencyId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "dependencyValue": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "pauseStartDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "pauseEndDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "isArchived": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "lastSubmittedRecord": {
                      "title": "CheckRecordDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.CheckRecordDto"
                          }
                      ],
                      "nullable": true
                  },
                  "statistics": {
                      "title": "CheckStatisticsDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.CheckStatisticsDto"
                          }
                      ],
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Inspections.Dto.CheckRecordDto": {
              "title": "CheckRecordDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "inspectionId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "checkId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "inspectionRecordId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "status": {
                      "title": "CheckRecordStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Inspections.Enums.CheckRecordStatus"
                          }
                      ]
                  },
                  "submittedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "submittedSiteLocalDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "numberValue": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "stringValue": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "dateValue": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "notes": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "insightId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "effectiveDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Inspections.Dto.CheckStatisticsDto": {
              "title": "CheckStatisticsDto",
              "type": "object",
              "properties": {
                  "checkRecordCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "lastCheckSubmittedEntry": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "lastCheckSubmittedUserId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "lastCheckSubmittedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "workableCheckStatus": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Inspections.Enums.CheckRecordStatus"
                          }
                      ],
                      "nullable": true
                  },
                  "nextCheckRecordDueTime": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Inspections.Dto.InspectionDto": {
              "title": "InspectionDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "floorCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "zoneId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "assetId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid",
                      "deprecated": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "frequency": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "frequencyUnit": {
                      "title": "SchedulingUnit",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Inspections.Enums.SchedulingUnit"
                          }
                      ]
                  },
                  "startDate": {
                      "title": "String",
                      "type": "string",
                      "description": "This is in the site timezone",
                      "nullable": true
                  },
                  "endDate": {
                      "title": "String",
                      "type": "string",
                      "description": "This is in the site timezone",
                      "nullable": true
                  },
                  "isArchived": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "sortOrder": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "checks": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.Inspections.Dto.CheckDto"
                      },
                      "nullable": true
                  },
                  "checkRecordCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "checkRecordSummaryStatus": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Inspections.Enums.CheckRecordStatus"
                          }
                      ],
                      "nullable": true
                  },
                  "nextCheckRecordDueTime": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "lastCheckSubmittedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "workableCheckCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "completedCheckCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Inspections.Dto.ZoneDto": {
              "title": "ZoneDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Inspections.Enums.CheckRecordStatus": {
              "title": "CheckRecordStatus",
              "enum": [
                  "due",
                  "overdue",
                  "completed",
                  "missed",
                  "notRequired"
              ],
              "type": "string"
          },
          "PublicApi.Features.Inspections.Enums.CheckType": {
              "title": "CheckType",
              "enum": [
                  "numeric",
                  "total",
                  "list",
                  "date"
              ],
              "type": "string"
          },
          "PublicApi.Features.Inspections.Enums.SchedulingUnit": {
              "title": "SchedulingUnit",
              "enum": [
                  "hours",
                  "days",
                  "weeks",
                  "months",
                  "years"
              ],
              "type": "string"
          },
          "PublicApi.Features.LiveData.Models.GetTelemetryResponse": {
              "title": "GetTelemetryResponse",
              "type": "object",
              "properties": {
                  "telemetry": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Services.LiveData.LiveDataSender+TelemetryUnifiedPayload"
                      },
                      "description": "A list of the Unified Telemetry items.",
                      "nullable": true
                  },
                  "continuationToken": {
                      "title": "String",
                      "type": "string",
                      "description": "Continuation token for subsequent paging calls.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "The response object for the GetTelemetry api endpoint."
          },
          "PublicApi.Features.LiveData.SendLiveDataPointFailure": {
              "title": "SendLiveDataPointFailure",
              "type": "object",
              "properties": {
                  "pointId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "errorMessage": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "errorCode": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.LiveData.SendLiveDataRequest": {
              "title": "SendLiveDataRequest",
              "type": "object",
              "properties": {
                  "points": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.LiveData.PointLiveData"
                      },
                      "nullable": true
                  },
                  "skipExceptions": {
                      "title": "Boolean",
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.LiveData.SendLiveDataResponse": {
              "title": "SendLiveDataResponse",
              "type": "object",
              "properties": {
                  "successes": {
                      "title": "IList`1",
                      "type": "array",
                      "items": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      },
                      "nullable": true
                  },
                  "failures": {
                      "title": "IList`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendLiveDataPointFailure"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.LiveData.SendTelemetryFailure": {
              "title": "SendTelemetryFailure",
              "type": "object",
              "properties": {
                  "telemetry": {
                      "title": "TelemetryPayload",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.LiveData.TelemetryPayload"
                          }
                      ],
                      "nullable": true
                  },
                  "errorMessage": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "errorCode": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.LiveData.SendTelemetryRequest": {
              "title": "SendTelemetryRequest",
              "type": "object",
              "properties": {
                  "telemetry": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.LiveData.TelemetryPayload"
                      },
                      "nullable": true
                  },
                  "skipExceptions": {
                      "title": "Boolean",
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.LiveData.SendTelemetryResponse": {
              "title": "SendTelemetryResponse",
              "type": "object",
              "properties": {
                  "successes": {
                      "title": "IList`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.LiveData.TelemetryPayload"
                      },
                      "nullable": true
                  },
                  "failures": {
                      "title": "IList`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.LiveData.SendTelemetryFailure"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.LookupData.Models.LookupData": {
              "title": "LookupData",
              "type": "object",
              "properties": {
                  "type": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "data": {
                      "title": "Object[]",
                      "type": "array",
                      "items": {
                          "title": "Object"
                      },
                      "nullable": true
                  },
                  "uniquePropertyName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "lastUpdatedDate": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.LookupData.Models.SaveLookupDataRequest": {
              "title": "SaveLookupDataRequest",
              "type": "object",
              "properties": {
                  "lookupData": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.LookupData.Models.LookupData"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Dto.MappedTicketDetailsDto": {
              "title": "MappedTicketDetailsDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Id of the Ticket in the Willow",
                      "format": "uuid",
                      "nullable": true
                  },
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "description": "The site Id of the ticket",
                      "format": "uuid"
                  },
                  "summary": {
                      "title": "String",
                      "type": "string",
                      "description": "summary of the ticket",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "description": "description of the ticket",
                      "nullable": true
                  },
                  "priority": {
                      "title": "String",
                      "type": "string",
                      "description": "priority of the ticket",
                      "nullable": true
                  },
                  "status": {
                      "title": "String",
                      "type": "string",
                      "description": "status of the ticket",
                      "nullable": true
                  },
                  "subStatus": {
                      "title": "String",
                      "type": "string",
                      "description": "sub status of the ticket",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "description": "TwinId of the ticket",
                      "nullable": true
                  },
                  "spaceTwinId": {
                      "title": "String",
                      "type": "string",
                      "description": "TwinId of the Space",
                      "nullable": true
                  },
                  "reporter": {
                      "title": "MappedReporter",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedReporter"
                          }
                      ],
                      "description": "reporter of the ticket",
                      "nullable": true
                  },
                  "assigneeType": {
                      "title": "String",
                      "type": "string",
                      "description": "Assignee type of the ticket",
                      "nullable": true
                  },
                  "assignee": {
                      "title": "MappedAssignee",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedAssignee"
                          }
                      ],
                      "description": "Assignee of the ticket",
                      "nullable": true
                  },
                  "assigneeWorkgroup": {
                      "title": "MappedWorkgroup",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedWorkgroup"
                          }
                      ],
                      "description": "Assignee workgroup of the ticket",
                      "nullable": true
                  },
                  "dueDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Due date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "createdDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Created date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "updatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Updated date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "resolvedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Resolved date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "closedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Closed date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "requestType": {
                      "title": "String",
                      "type": "string",
                      "description": "Request Type is the same as Ticket Category",
                      "nullable": true
                  },
                  "jobType": {
                      "title": "String",
                      "type": "string",
                      "description": "Job Type of the ticket",
                      "nullable": true
                  },
                  "cause": {
                      "title": "String",
                      "type": "string",
                      "description": "Cause of the issue",
                      "nullable": true
                  },
                  "solution": {
                      "title": "String",
                      "type": "string",
                      "description": "Solution of the issue",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "description": "Id of the Ticket in the Mapped",
                      "nullable": true
                  },
                  "creator": {
                      "title": "MappedUserProfile",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedUserProfile"
                          }
                      ],
                      "description": "Creator Id of the Ticket",
                      "nullable": true
                  },
                  "willowUrl": {
                      "title": "String",
                      "type": "string",
                      "description": "ticket url in Willow",
                      "nullable": true
                  },
                  "serviceNeeded": {
                      "title": "String",
                      "type": "string",
                      "description": "Service Needed for the Ticket",
                      "nullable": true
                  },
                  "externalCreatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Created date of the ticket in the external system",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalUpdatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Updated date of the ticket in the external system",
                      "format": "date-time",
                      "nullable": true
                  },
                  "closedBy": {
                      "title": "MappedUserProfile",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedUserProfile"
                          }
                      ],
                      "description": "Represents the user who closed the ticket",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Dto.MappedTicketDto": {
              "title": "MappedTicketDto",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Id of the Ticket in the Willow",
                      "format": "uuid",
                      "nullable": true
                  },
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "description": "The site Id of the ticket",
                      "format": "uuid"
                  },
                  "summary": {
                      "title": "String",
                      "type": "string",
                      "description": "summary of the ticket",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "description": "description of the ticket",
                      "nullable": true
                  },
                  "priority": {
                      "title": "String",
                      "type": "string",
                      "description": "priority of the ticket",
                      "nullable": true
                  },
                  "status": {
                      "title": "String",
                      "type": "string",
                      "description": "status of the ticket",
                      "nullable": true
                  },
                  "subStatus": {
                      "title": "String",
                      "type": "string",
                      "description": "sub status of the ticket",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "description": "TwinId of the ticket",
                      "nullable": true
                  },
                  "spaceTwinId": {
                      "title": "String",
                      "type": "string",
                      "description": "TwinId of the Space",
                      "nullable": true
                  },
                  "reporter": {
                      "title": "MappedReporter",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedReporter"
                          }
                      ],
                      "description": "reporter of the ticket",
                      "nullable": true
                  },
                  "assigneeType": {
                      "title": "String",
                      "type": "string",
                      "description": "Assignee type of the ticket",
                      "nullable": true
                  },
                  "assignee": {
                      "title": "MappedAssignee",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedAssignee"
                          }
                      ],
                      "description": "Assignee of the ticket",
                      "nullable": true
                  },
                  "assigneeWorkgroup": {
                      "title": "MappedWorkgroup",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedWorkgroup"
                          }
                      ],
                      "description": "Assignee workgroup of the ticket",
                      "nullable": true
                  },
                  "dueDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Due date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "createdDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Created date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "updatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Updated date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "resolvedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Resolved date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "closedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Closed date of the ticket",
                      "format": "date-time",
                      "nullable": true
                  },
                  "requestType": {
                      "title": "String",
                      "type": "string",
                      "description": "Request Type is the same as Ticket Category",
                      "nullable": true
                  },
                  "jobType": {
                      "title": "String",
                      "type": "string",
                      "description": "Job Type of the ticket",
                      "nullable": true
                  },
                  "cause": {
                      "title": "String",
                      "type": "string",
                      "description": "Cause of the issue",
                      "nullable": true
                  },
                  "solution": {
                      "title": "String",
                      "type": "string",
                      "description": "Solution of the issue",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "description": "Id of the Ticket in the Mapped",
                      "nullable": true
                  },
                  "creator": {
                      "title": "MappedUserProfile",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedUserProfile"
                          }
                      ],
                      "description": "Creator Id of the Ticket",
                      "nullable": true
                  },
                  "willowUrl": {
                      "title": "String",
                      "type": "string",
                      "description": "ticket url in Willow",
                      "nullable": true
                  },
                  "serviceNeeded": {
                      "title": "String",
                      "type": "string",
                      "description": "Service Needed for the Ticket",
                      "nullable": true
                  },
                  "externalCreatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Created date of the ticket in the external system",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalUpdatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Updated date of the ticket in the external system",
                      "format": "date-time",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Requests.MappedAssignee": {
              "title": "MappedAssignee",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Requests.MappedReporter": {
              "title": "MappedReporter",
              "type": "object",
              "properties": {
                  "reporterName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterPhone": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterEmail": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporterCompany": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Requests.MappedTicketRequest": {
              "title": "MappedTicketRequest",
              "required": [
                  "eventId",
                  "eventType",
                  "timestamp"
              ],
              "type": "object",
              "properties": {
                  "eventId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "unique Event Id",
                      "format": "uuid"
                  },
                  "eventType": {
                      "title": "String",
                      "minLength": 1,
                      "type": "string",
                      "description": "Event Type create|update"
                  },
                  "timestamp": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Timestamp of the event",
                      "format": "date-time"
                  },
                  "data": {
                      "title": "TicketData",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.TicketData"
                          }
                      ],
                      "description": "Ticket Data",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Requests.MappedUserProfile": {
              "title": "MappedUserProfile",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "phone": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "company": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Requests.MappedWorkgroup": {
              "title": "MappedWorkgroup",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "assignees": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedAssignee"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Requests.TicketData": {
              "title": "TicketData",
              "required": [
                  "externalId"
              ],
              "type": "object",
              "properties": {
                  "summary": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket Summary (services needed)",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket Description",
                      "nullable": true
                  },
                  "priority": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket Priority (Urgent, High, Medium , Low)",
                      "nullable": true
                  },
                  "status": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket Status",
                      "nullable": true
                  },
                  "subStatus": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket SubStatus",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket TwinId",
                      "nullable": true
                  },
                  "spaceTwinId": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket Space TwinId",
                      "nullable": true
                  },
                  "reporter": {
                      "title": "MappedReporter",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedReporter"
                          }
                      ],
                      "description": "ticket reporter",
                      "nullable": true
                  },
                  "assigneeType": {
                      "title": "String",
                      "type": "string",
                      "description": "AssigneeType =  (NoAssignee, CustomerUser, WorkGroup)",
                      "nullable": true
                  },
                  "assignee": {
                      "title": "MappedAssignee",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedAssignee"
                          }
                      ],
                      "description": "Ticket Assignee",
                      "nullable": true
                  },
                  "assigneeWorkgroup": {
                      "title": "MappedWorkgroup",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedWorkgroup"
                          }
                      ],
                      "description": "Ticket Assignee Workgroup",
                      "nullable": true
                  },
                  "dueDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Ticket DueDate",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalCreatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Ticket Created Date in the External System",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalUpdatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Ticket Updated Date in the External System",
                      "format": "date-time",
                      "nullable": true
                  },
                  "resolvedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Ticket Resolved Date",
                      "format": "date-time",
                      "nullable": true
                  },
                  "closedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Ticket Closed Date",
                      "format": "date-time",
                      "nullable": true
                  },
                  "requestType": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket Request Type = Category",
                      "nullable": true
                  },
                  "jobType": {
                      "title": "String",
                      "type": "string",
                      "description": "ticket Job Type",
                      "nullable": true
                  },
                  "cause": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket Cause",
                      "nullable": true
                  },
                  "solution": {
                      "title": "String",
                      "type": "string",
                      "description": "Ticket Solution",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "maxLength": 128,
                      "minLength": 1,
                      "type": "string",
                      "description": "Id of the Ticket in the Mapped"
                  },
                  "creator": {
                      "title": "MappedUserProfile",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedUserProfile"
                          }
                      ],
                      "description": "Ticket Creator data",
                      "nullable": true
                  },
                  "serviceNeeded": {
                      "title": "String",
                      "type": "string",
                      "description": "Service Needed for the Ticket",
                      "nullable": true
                  },
                  "closedBy": {
                      "title": "MappedUserProfile",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Requests.MappedUserProfile"
                          }
                      ],
                      "description": "The user who closed the ticket",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Responses.GetTicketResponse": {
              "title": "GetTicketResponse",
              "type": "object",
              "properties": {
                  "isSuccess": {
                      "title": "Boolean",
                      "type": "boolean",
                      "description": "Response status"
                  },
                  "errorList": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Validation error list",
                      "nullable": true
                  },
                  "data": {
                      "title": "MappedTicketDetailsDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Dto.MappedTicketDetailsDto"
                          }
                      ],
                      "description": "Ticket Data",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Responses.GetTicketsResponse": {
              "title": "GetTicketsResponse",
              "type": "object",
              "properties": {
                  "isSuccess": {
                      "title": "Boolean",
                      "type": "boolean",
                      "description": "Response status"
                  },
                  "errorList": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Validation error list",
                      "nullable": true
                  },
                  "data": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.Mapped.Dto.MappedTicketDto"
                      },
                      "description": "Get list of tickets",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Responses.TicketCategoricalDataResponse": {
              "title": "TicketCategoricalDataResponse",
              "type": "object",
              "properties": {
                  "ticketStatus": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Ticket status list",
                      "nullable": true
                  },
                  "ticketSubStatus": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Ticket sub status list",
                      "nullable": true
                  },
                  "priorities": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Ticket priorities list",
                      "nullable": true
                  },
                  "assigneeTypes": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Ticket  assignee types list",
                      "nullable": true
                  },
                  "jobTypes": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Ticket job types list",
                      "nullable": true
                  },
                  "requestTypes": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Ticket request types list\r\nRequest type is equivalent to ticket categories",
                      "nullable": true
                  },
                  "servicesNeeded": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.TicketSpaceTwinServiceNeededResponse"
                      },
                      "description": "Service needed list for each space twin",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Responses.TicketSpaceTwinServiceNeededResponse": {
              "title": "TicketSpaceTwinServiceNeededResponse",
              "type": "object",
              "properties": {
                  "spaceTwinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "serviceNeededList": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Responses.UpsertTicketResponse": {
              "title": "UpsertTicketResponse",
              "type": "object",
              "properties": {
                  "isSuccess": {
                      "title": "Boolean",
                      "type": "boolean",
                      "description": "Response status"
                  },
                  "errorList": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Validation error list",
                      "nullable": true
                  },
                  "data": {
                      "title": "UpsertedTicketData",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Features.Mapped.Responses.UpsertedTicketData"
                          }
                      ],
                      "description": "Upserted ticket data",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Mapped.Responses.UpsertedTicketData": {
              "title": "UpsertedTicketData",
              "type": "object",
              "properties": {
                  "ticketId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Reporters.CreateReporterRequest": {
              "title": "CreateReporterRequest",
              "type": "object",
              "properties": {
                  "customerId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "phone": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "company": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Reporters.UpdateReporterRequest": {
              "title": "UpdateReporterRequest",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "phone": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "company": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.TicketAttachments.CreateTicketAttachmentRequest": {
              "title": "CreateTicketAttachmentRequest",
              "type": "object",
              "properties": {
                  "fileName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "contentAsBase64": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.TicketCategories.CreateTicketCategoryRequest": {
              "title": "CreateTicketCategoryRequest",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.TicketCategories.UpdateTicketCategoryRequest": {
              "title": "UpdateTicketCategoryRequest",
              "type": "object",
              "properties": {
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Tickets.CreateTicketBatchRequest": {
              "title": "CreateTicketBatchRequest",
              "type": "object",
              "properties": {
                  "tickets": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.CreateTicketRequest"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Tickets.CreateTicketRequest": {
              "title": "CreateTicketRequest",
              "type": "object",
              "properties": {
                  "priority": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "issueType": {
                      "title": "TicketIssueType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketIssueType"
                          }
                      ]
                  },
                  "issueId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "issueName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "summary": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "status": {
                      "title": "TicketStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketStatus"
                          }
                      ]
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "floorId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalStatus": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalMetadata": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporter": {
                      "title": "ReporterDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Dto.ReporterDto"
                          }
                      ],
                      "nullable": true
                  },
                  "dueDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "categoryId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "externalCreatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalUpdatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "latitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "longitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "assigneeType": {
                      "title": "TicketAssigneeType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketAssigneeType"
                          }
                      ]
                  },
                  "assigneeId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "customProperties": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string",
                          "nullable": true
                      },
                      "nullable": true
                  },
                  "extendableSearchablePropertyKeys": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Tickets.DeleteTicketCustomPropertiesRequest": {
              "title": "DeleteTicketCustomPropertiesRequest",
              "type": "object",
              "properties": {
                  "ticketPropertyKeys": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.TicketCustomPropertyKeys"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Tickets.TicketCustomProperties": {
              "title": "TicketCustomProperties",
              "type": "object",
              "properties": {
                  "ticketId": {
                      "title": "Guid",
                      "type": "string",
                      "description": "The id of the ticket on which to upsert custom properties",
                      "format": "uuid"
                  },
                  "customProperties": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.TicketCustomProperty"
                      },
                      "description": "Collection of custom properties to upsert to the ticket",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Tickets.TicketCustomProperty": {
              "title": "TicketCustomProperty",
              "type": "object",
              "properties": {
                  "key": {
                      "title": "String",
                      "type": "string",
                      "description": "Key that will be used to identify the custom property",
                      "nullable": true
                  },
                  "value": {
                      "title": "String",
                      "type": "string",
                      "description": "Value of the custom property",
                      "nullable": true
                  },
                  "isSearchable": {
                      "title": "Boolean",
                      "type": "boolean",
                      "description": "Indicator of whether the value is to be included in text searches for tickets"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Tickets.TicketCustomPropertyKeys": {
              "title": "TicketCustomPropertyKeys",
              "type": "object",
              "properties": {
                  "ticketId": {
                      "title": "Guid",
                      "type": "string",
                      "description": "The id of the ticket on which to delete custom properties",
                      "format": "uuid"
                  },
                  "customPropertyKeys": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Collection of custom property keys to delete from the ticket",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Tickets.UpdateTicketRequest": {
              "title": "UpdateTicketRequest",
              "type": "object",
              "properties": {
                  "priority": {
                      "title": "Nullable`1",
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                  },
                  "status": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketStatus"
                          }
                      ],
                      "nullable": true
                  },
                  "floorCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "issueType": {
                      "title": "TicketIssueType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketIssueType"
                          }
                      ]
                  },
                  "issueId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "issueName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "summary": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "cause": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "solution": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "assigneeType": {
                      "title": "TicketAssigneeType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.Workflow.TicketAssigneeType"
                          }
                      ]
                  },
                  "assigneeId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "dueDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "categoryId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "externalCreatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalUpdatedDate": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "externalMetadata": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "reporter": {
                      "title": "ReporterDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Dto.ReporterDto"
                          }
                      ],
                      "nullable": true
                  },
                  "lastUpdatedByExternalSource": {
                      "title": "Boolean",
                      "type": "boolean",
                      "readOnly": true
                  },
                  "latitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "longitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "customProperties": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string",
                          "nullable": true
                      },
                      "nullable": true
                  },
                  "extendableSearchablePropertyKeys": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Features.Workflow.Requests.Tickets.UpsertTicketCustomPropertiesRequest": {
              "title": "UpsertTicketCustomPropertiesRequest",
              "type": "object",
              "properties": {
                  "values": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Features.Workflow.Requests.Tickets.TicketCustomProperties"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.AppServices.AppConfig.AppCapabilityDto": {
              "title": "AppCapabilityDto",
              "type": "object",
              "properties": {
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "model": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "isCapabilityOf": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "trendId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "connectorId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "version": {
                      "title": "Int64",
                      "type": "integer",
                      "format": "int64"
                  },
                  "lastUpdated": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.AppServices.AppConfig.AppTwinCustomProperty": {
              "title": "AppTwinCustomProperty",
              "type": "object",
              "properties": {
                  "key": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "value": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.AppServices.AppConfig.AppTwinDto": {
              "title": "AppTwinDto",
              "type": "object",
              "properties": {
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "lastUpdated": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "model": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "uniqueId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "isPartOf": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "version": {
                      "title": "Int64",
                      "type": "integer",
                      "format": "int64"
                  },
                  "tags": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  },
                  "customProperties": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.AppServices.AppConfig.AppTwinCustomProperty"
                      },
                      "nullable": true
                  },
                  "floorId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "floorCode": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.AppServices.AppConfig.ResponseModels.GetAppConfigResponse": {
              "title": "GetAppConfigResponse",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "Guid",
                      "type": "string",
                      "description": "Gets the unique identifier for the configuration.",
                      "format": "uuid"
                  },
                  "siteId": {
                      "title": "Guid",
                      "type": "string",
                      "description": "Gets the site id for this application.",
                      "format": "uuid"
                  },
                  "customerId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Gets the customer id for this application.",
                      "format": "uuid",
                      "nullable": true
                  },
                  "isEnabled": {
                      "title": "Boolean",
                      "type": "boolean",
                      "description": "Gets if the application is enabled or not."
                  },
                  "appKind": {
                      "title": "String",
                      "type": "string",
                      "description": "Gets the application kind. Cloud or Edge.",
                      "nullable": true
                  },
                  "properties": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "Object",
                          "nullable": true
                      },
                      "description": "Gets the properties for the application.",
                      "nullable": true
                  },
                  "secrets": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "Object",
                          "nullable": true
                      },
                      "description": "Gets the secrets for the application.",
                      "nullable": true
                  },
                  "createdAt": {
                      "title": "DateTime",
                      "type": "string",
                      "description": "Gets the created timestamp in UTC.",
                      "format": "date-time"
                  },
                  "updatedAt": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Gets the last updated timestamp in UTC.",
                      "format": "date-time",
                      "nullable": true
                  },
                  "version": {
                      "title": "String",
                      "type": "string",
                      "description": "Gets the version of the configuration.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Represents the application configuration state."
          },
          "PublicApi.Models.AppServices.AppConfig.ResponseModels.GetAppConfigVersionResponse": {
              "title": "GetAppConfigVersionResponse",
              "type": "object",
              "properties": {
                  "version": {
                      "title": "String",
                      "type": "string",
                      "description": "Gets the current version for the configuration.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Represents the application configuration version information."
          },
          "PublicApi.Models.AppServices.AppConfig.ResponseModels.GetCapabilitiesResponse": {
              "title": "GetCapabilitiesResponse",
              "type": "object",
              "properties": {
                  "capabilities": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.AppServices.AppConfig.AppCapabilityDto"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.AppServices.AppConfig.ResponseModels.GetTwinsResponse": {
              "title": "GetTwinsResponse",
              "type": "object",
              "properties": {
                  "twins": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.AppServices.AppConfig.AppTwinDto"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.AppServices.Audit.RequestModels.CreateAuditLogRequest": {
              "title": "CreateAuditLogRequest",
              "required": [
                  "message",
                  "status",
                  "timestamp",
                  "type"
              ],
              "type": "object",
              "properties": {
                  "type": {
                      "title": "String",
                      "minLength": 1,
                      "type": "string",
                      "description": "Gets and sets the audit log type. Example of types include Configuration, Scanning, Trending."
                  },
                  "timestamp": {
                      "title": "DateTime",
                      "type": "string",
                      "description": "Gets and sets the timestamp in UTC.",
                      "format": "date-time"
                  },
                  "message": {
                      "title": "String",
                      "minLength": 1,
                      "type": "string",
                      "description": "Gets and sets the message of the audit log."
                  },
                  "status": {
                      "title": "String",
                      "minLength": 1,
                      "type": "string",
                      "description": "Gets and sets the audit log status. Common statuses include Completed, Failed, Updated, Deleted, etc."
                  },
                  "additionalDetails": {
                      "title": "String",
                      "type": "string",
                      "description": "Gets and sets any additional details of the audit log.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Represents an audit log."
          },
          "PublicApi.Models.AppServices.Scanning.RequestModels.CreateScanRequest": {
              "title": "CreateScanRequest",
              "type": "object",
              "properties": {
                  "parameters": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string",
                          "nullable": true
                      },
                      "description": "Gets and sets the scan parameters if any.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Represents a scan request."
          },
          "PublicApi.Models.AppServices.Scanning.RequestModels.UpdateScanStatusRequest": {
              "title": "UpdateScanStatusRequest",
              "type": "object",
              "properties": {
                  "status": {
                      "title": "ScanStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Marketplace.AppServices.Api.Models.Scanning.ScanStatus"
                          }
                      ],
                      "description": "Gets and sets the scan status."
                  },
                  "details": {
                      "title": "String",
                      "type": "string",
                      "description": "Gets and sets the scan status details if any.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Represents a request to update a scan's status."
          },
          "PublicApi.Models.AppServices.Scanning.ResponseModels.GetScanDetailsResponse": {
              "title": "GetScanDetailsResponse",
              "type": "object",
              "properties": {
                  "scan": {
                      "title": "ScanSummaryDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.ScanSummaryDto"
                          }
                      ],
                      "description": "Gets the scan.",
                      "nullable": true
                  },
                  "statusHistory": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.ScanStatusDto"
                      },
                      "description": "Gets the scan status history.",
                      "nullable": true
                  },
                  "parameters": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string",
                          "nullable": true
                      },
                      "description": "Gets the scan parameters if any.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Represents a scan with details."
          },
          "PublicApi.Models.AppServices.Scanning.ResponseModels.GetScanStatusResponse": {
              "title": "GetScanStatusResponse",
              "type": "object",
              "properties": {
                  "scanStatus": {
                      "title": "ScanStatusDto",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.ScanStatusDto"
                          }
                      ],
                      "description": "Represents scan status information.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Gets the scan status."
          },
          "PublicApi.Models.AppServices.Scanning.ResponseModels.GetScanSummaryResponse": {
              "title": "GetScanSummaryResponse",
              "type": "object",
              "properties": {
                  "scans": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.AppServices.Scanning.ScanSummaryDto"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Gets the scan summary."
          },
          "PublicApi.Models.AppServices.Scanning.ScanStatusDto": {
              "title": "ScanStatusDto",
              "type": "object",
              "properties": {
                  "status": {
                      "title": "ScanStatus",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Marketplace.AppServices.Api.Models.Scanning.ScanStatus"
                          }
                      ],
                      "description": "Gets the scan status."
                  },
                  "details": {
                      "title": "String",
                      "type": "string",
                      "description": "Gets the scan status details if any.",
                      "nullable": true
                  },
                  "timestamp": {
                      "title": "DateTime",
                      "type": "string",
                      "description": "Gets the timestamp in UTC of the scan status.",
                      "format": "date-time"
                  }
              },
              "additionalProperties": false,
              "description": "Represents scan status information."
          },
          "PublicApi.Models.AppServices.Scanning.ScanSummaryDto": {
              "title": "ScanSummaryDto",
              "type": "object",
              "properties": {
                  "scanId": {
                      "title": "Guid",
                      "type": "string",
                      "description": "Gets the scan ID",
                      "format": "uuid"
                  },
                  "currentStatus": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Marketplace.AppServices.Api.Models.Scanning.ScanStatus"
                          }
                      ],
                      "description": "Gets the current status of the scan",
                      "nullable": true
                  },
                  "hasScanResult": {
                      "title": "Boolean",
                      "type": "boolean",
                      "description": "Gets a value indicating whether the scan has any results"
                  },
                  "dateRequested": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Gets the date the scan was requested",
                      "format": "date-time",
                      "nullable": true
                  },
                  "dateCompleted": {
                      "title": "Nullable`1",
                      "type": "string",
                      "description": "Gets the date the scan was completed",
                      "format": "date-time",
                      "nullable": true
                  },
                  "details": {
                      "title": "String",
                      "type": "string",
                      "description": "Gets the details of the scan",
                      "nullable": true
                  },
                  "parameters": {
                      "title": "Dictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string",
                          "nullable": true
                      },
                      "description": "Gets the scan parameters if any",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.DigitalTwin.AdtModel": {
              "title": "AdtModel",
              "type": "object",
              "properties": {
                  "isDecommissioned": {
                      "title": "Nullable`1",
                      "type": "boolean",
                      "nullable": true
                  },
                  "description": {
                      "title": "IDictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  },
                  "displayName": {
                      "title": "IDictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "String",
                          "type": "string"
                      },
                      "nullable": true
                  },
                  "id": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "uploadTime": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                  },
                  "model": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "isShared": {
                      "title": "Boolean",
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.DigitalTwin.ClosestWithCustomPropertyQuery": {
              "title": "ClosestWithCustomPropertyQuery",
              "type": "object",
              "properties": {
                  "twinIds": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "TwinIds of the twins for which to resolve closest matching twin",
                      "nullable": true
                  },
                  "relationships": {
                      "title": "String[]",
                      "type": "array",
                      "items": {
                          "title": "String",
                          "type": "string"
                      },
                      "description": "Relationships to traverse when searching for matching twins",
                      "nullable": true
                  },
                  "customPropertyToFind": {
                      "title": "String",
                      "type": "string",
                      "description": "Custom property that will deem a twin as a match when found",
                      "nullable": true
                  },
                  "maxNumberOfHops": {
                      "title": "Int32",
                      "type": "integer",
                      "description": "Maximum number of hops to perform when traversing from original twin(s)",
                      "format": "int32"
                  }
              },
              "additionalProperties": false,
              "description": "Represents a set of parameters for querying twins where a specified custom property is present"
          },
          "PublicApi.Models.DigitalTwin.CurrentValue": {
              "title": "CurrentValue",
              "type": "object",
              "properties": {
                  "value": {
                      "title": "Object",
                      "nullable": true
                  },
                  "unit": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.DigitalTwin.FlexTwin": {
              "title": "FlexTwin",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "metadata": {
                      "title": "TwinMetadata",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.TwinMetadata"
                          }
                      ],
                      "nullable": true
                  }
              },
              "additionalProperties": {
                  "title": "Object"
              }
          },
          "PublicApi.Models.DigitalTwin.TwinMatchDto": {
              "title": "TwinMatchDto",
              "type": "object",
              "properties": {
                  "originalTwinId": {
                      "title": "String",
                      "type": "string",
                      "description": "The original twin id from which the query was performed.",
                      "nullable": true
                  },
                  "resolvedTwinId": {
                      "title": "String",
                      "type": "string",
                      "description": "The twin id of the resolved twin.",
                      "nullable": true
                  },
                  "resolvedTwinCustomPropertyValue": {
                      "title": "Object",
                      "description": "The value of the custom property as found on the twin with twin id PublicApi.Models.DigitalTwin.TwinMatchDto.ResolvedTwinId.\r\nSee PublicApi.Models.DigitalTwin.ClosestWithCustomPropertyQuery.CustomPropertyToFind.",
                      "nullable": true
                  }
              },
              "additionalProperties": false,
              "description": "Represents a twin match for PublicApi.Models.DigitalTwin.ClosestWithCustomPropertyQuery."
          },
          "PublicApi.Models.DigitalTwin.TwinMetadata": {
              "title": "TwinMetadata",
              "type": "object",
              "properties": {
                  "modelId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": {
                  "title": "Object"
              }
          },
          "PublicApi.Models.DigitalTwin.TwinRelationship": {
              "title": "TwinRelationship",
              "type": "object",
              "properties": {
                  "id": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "targetId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "sourceId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": {
                  "title": "Object"
              }
          },
          "PublicApi.Models.DigitalTwin.TwinWithRelationships": {
              "title": "TwinWithRelationships",
              "type": "object",
              "properties": {
                  "twin": {
                      "title": "FlexTwin",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.FlexTwin"
                          }
                      ],
                      "nullable": true
                  },
                  "relationships": {
                      "title": "IEnumerable`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.DigitalTwin.TwinRelationship"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.Insight.Dependency": {
              "title": "Dependency",
              "type": "object",
              "properties": {
                  "relationship": {
                      "title": "String",
                      "type": "string",
                      "description": "Relationship type",
                      "nullable": true
                  },
                  "insightId": {
                      "title": "Guid",
                      "type": "string",
                      "description": "insight id in InsightCore",
                      "format": "uuid"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.Insight.ImpactScore": {
              "title": "ImpactScore",
              "type": "object",
              "properties": {
                  "fieldId": {
                      "title": "String",
                      "type": "string",
                      "description": "The field id of the impact score",
                      "nullable": true
                  },
                  "name": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "value": {
                      "title": "Double",
                      "type": "number",
                      "format": "double"
                  },
                  "unit": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "description": "It is an Id that matches a timeseries in ADX's ExternalId",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.Insight.InsightOccurrence": {
              "title": "InsightOccurrence",
              "type": "object",
              "properties": {
                  "occurrenceId": {
                      "title": "String",
                      "maxLength": 36,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "isValid": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "isFaulted": {
                      "title": "Boolean",
                      "type": "boolean"
                  },
                  "started": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "ended": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "text": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.Insight.InsightSourceType": {
              "title": "InsightSourceType",
              "enum": [
                  "willow",
                  "app",
                  "inspection"
              ],
              "type": "string"
          },
          "PublicApi.Models.Insight.InsightState": {
              "title": "InsightState",
              "enum": [
                  "inactive",
                  "active",
                  "archived"
              ],
              "type": "string"
          },
          "PublicApi.Models.Insight.InsightStatus": {
              "title": "InsightStatus",
              "enum": [
                  "open",
                  "ignored",
                  "inProgress",
                  "resolved",
                  "new"
              ],
              "type": "string"
          },
          "PublicApi.Models.Insight.InsightType": {
              "title": "InsightType",
              "enum": [
                  "fault",
                  "energy",
                  "alert",
                  "note",
                  "goldenStandard",
                  "infrastructure",
                  "integrityKpi",
                  "energyKpi",
                  "edgeDevice",
                  "dataQuality",
                  "commissioning",
                  "comfort",
                  "wellness",
                  "calibration",
                  "diagnostic",
                  "predictive"
              ],
              "type": "string"
          },
          "PublicApi.Models.Insight.OldInsightStatus": {
              "title": "OldInsightStatus",
              "enum": [
                  "open",
                  "acknowledged",
                  "inProgress",
                  "closed"
              ],
              "type": "string"
          },
          "PublicApi.Models.Insight.Point": {
              "title": "Point",
              "type": "object",
              "properties": {
                  "twinId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.LiveData.PointLiveData": {
              "title": "PointLiveData",
              "required": [
                  "pointId",
                  "timestamp",
                  "value"
              ],
              "type": "object",
              "properties": {
                  "pointId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "value": {
                      "title": "Decimal",
                      "type": "number",
                      "format": "double"
                  },
                  "timestamp": {
                      "title": "DateTimeOffset",
                      "type": "string",
                      "format": "date-time"
                  },
                  "connectorId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.LiveData.PointTimeSeriesDetails": {
              "title": "PointTimeSeriesDetails",
              "type": "object",
              "properties": {
                  "pointId": {
                      "title": "Guid",
                      "type": "string",
                      "format": "uuid"
                  },
                  "type": {
                      "title": "PointType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.PointType"
                          }
                      ]
                  },
                  "pointName": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "unit": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "data": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/PublicApi.Models.LiveData.TimeSeriesCommonData"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.LiveData.TelemetryEntityIdentificationType": {
              "title": "TelemetryEntityIdentificationType",
              "enum": [
                  "trendId",
                  "dtId",
                  "externalId"
              ],
              "type": "string"
          },
          "PublicApi.Models.LiveData.TelemetryPayload": {
              "title": "TelemetryPayload",
              "required": [
                  "entityId",
                  "entityIdentificationType",
                  "timestamp",
                  "value"
              ],
              "type": "object",
              "properties": {
                  "entityId": {
                      "title": "String",
                      "minLength": 1,
                      "type": "string",
                      "description": "The root identity for the telemetry."
                  },
                  "entityIdentificationType": {
                      "title": "TelemetryEntityIdentificationType",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/PublicApi.Models.LiveData.TelemetryEntityIdentificationType"
                          }
                      ],
                      "description": "The root entity identity type."
                  },
                  "value": {
                      "title": "Object",
                      "description": "The scalar value, but can be of any type (bool, string, decimal etc)."
                  },
                  "timestamp": {
                      "title": "DateTimeOffset",
                      "type": "string",
                      "description": "Timestamp of the telemetry event.",
                      "format": "date-time"
                  },
                  "properties": {
                      "title": "IDictionary`2",
                      "type": "object",
                      "additionalProperties": {
                          "title": "Object"
                      },
                      "description": "Any vertical specific properties not captured in other fields.",
                      "nullable": true
                  },
                  "latitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "longitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "altitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.LiveData.TimeSeriesCommonData": {
              "title": "TimeSeriesCommonData",
              "type": "object",
              "properties": {
                  "timestamp": {
                      "title": "DateTime",
                      "type": "string",
                      "format": "date-time"
                  },
                  "average": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "minimum": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "maximum": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "sum": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "onCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "offCount": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.MarketPlace.AppAccountToken": {
              "title": "AppAccountToken",
              "type": "object",
              "properties": {
                  "accessToken": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "expiresIn": {
                      "title": "Int32",
                      "type": "integer",
                      "format": "int32"
                  },
                  "tokenType": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Models.MarketPlace.ScanRequestParameter": {
              "title": "ScanRequestParameter",
              "type": "object",
              "properties": {
                  "keyName": {
                      "title": "String",
                      "type": "string",
                      "description": "Unique name of parameter.",
                      "nullable": true
                  },
                  "displayName": {
                      "title": "String",
                      "type": "string",
                      "description": "Display name for parameter.",
                      "nullable": true
                  },
                  "defaultValue": {
                      "title": "String",
                      "type": "string",
                      "description": "The value for this paramater, if no value is provided.",
                      "nullable": true
                  },
                  "description": {
                      "title": "String",
                      "type": "string",
                      "description": "Brief description of the intent/usage of the parameter.",
                      "nullable": true
                  },
                  "isRequired": {
                      "title": "Boolean",
                      "type": "boolean",
                      "description": "True if the paramater must be set."
                  },
                  "displayPriority": {
                      "title": "Byte",
                      "type": "integer",
                      "description": "Display order priority.",
                      "format": "int32"
                  }
              },
              "additionalProperties": false,
              "description": "A record representing one scan request parameter, to be used during scan request processing."
          },
          "PublicApi.Models.PointType": {
              "title": "PointType",
              "enum": [
                  "undefined",
                  "analog",
                  "binary",
                  "sum"
              ],
              "type": "string"
          },
          "PublicApi.Models.Workflow.TicketAssigneeType": {
              "title": "TicketAssigneeType",
              "enum": [
                  "noAssignee",
                  "customerUser",
                  "workGroup"
              ],
              "type": "string"
          },
          "PublicApi.Models.Workflow.TicketAttachmentType": {
              "title": "TicketAttachmentType",
              "enum": [
                  "image",
                  "file"
              ],
              "type": "string"
          },
          "PublicApi.Models.Workflow.TicketIssueType": {
              "title": "TicketIssueType",
              "enum": [
                  "noIssue",
                  "equipment",
                  "asset"
              ],
              "type": "string"
          },
          "PublicApi.Models.Workflow.TicketSourceType": {
              "title": "TicketSourceType",
              "enum": [
                  "platform",
                  "app",
                  "dynamics",
                  "mapped"
              ],
              "type": "string"
          },
          "PublicApi.Models.Workflow.TicketStatus": {
              "title": "TicketStatus",
              "enum": [
                  "open",
                  "reassign",
                  "inProgress",
                  "limitedAvailability",
                  "resolved",
                  "closed"
              ],
              "type": "string"
          },
          "PublicApi.Services.LiveData.LiveDataSender+TelemetryUnifiedPayload": {
              "title": "TelemetryUnifiedPayload",
              "type": "object",
              "properties": {
                  "dtId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "externalId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "trendId": {
                      "title": "String",
                      "type": "string",
                      "nullable": true
                  },
                  "scalarValue": {
                      "title": "Object",
                      "nullable": true
                  },
                  "sourceTimestamp": {
                      "title": "DateTimeOffset",
                      "type": "string",
                      "format": "date-time"
                  },
                  "enqueuedTimestamp": {
                      "title": "DateTimeOffset",
                      "type": "string",
                      "format": "date-time"
                  },
                  "properties": {
                      "title": "Object",
                      "nullable": true
                  },
                  "connectorId": {
                      "title": "Nullable`1",
                      "type": "string",
                      "format": "uuid",
                      "nullable": true
                  },
                  "latitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "longitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "altitude": {
                      "title": "Nullable`1",
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "PublicApi.Services.TicketCustomProps.TicketCustomPropertiesResponse": {
              "title": "TicketCustomPropertiesResponse",
              "type": "object",
              "properties": {
                  "success": {
                      "title": "Int32",
                      "type": "integer",
                      "description": "The number of tickets for which the action was successful",
                      "format": "int32"
                  },
                  "failed": {
                      "title": "List`1",
                      "type": "array",
                      "items": {
                          "title": "Guid",
                          "type": "string",
                          "format": "uuid"
                      },
                      "description": "Ticket ids where the action failed",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "System.Text.Json.Nodes.JsonNode": {
              "title": "JsonNode",
              "type": "object",
              "properties": {
                  "options": {
                      "title": "Nullable`1",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNodeOptions"
                          }
                      ],
                      "nullable": true,
                      "readOnly": true
                  },
                  "parent": {
                      "title": "JsonNode",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                          }
                      ],
                      "nullable": true,
                      "readOnly": true
                  },
                  "root": {
                      "title": "JsonNode",
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/System.Text.Json.Nodes.JsonNode"
                          }
                      ],
                      "nullable": true,
                      "readOnly": true
                  }
              },
              "additionalProperties": false
          },
          "System.Text.Json.Nodes.JsonNodeOptions": {
              "title": "JsonNodeOptions",
              "type": "object",
              "properties": {
                  "propertyNameCaseInsensitive": {
                      "title": "Boolean",
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          }
      }
  },
  "tags": [
      {
          "name": "Workflow",
          "description": "Tickets are used to describe both service requests and incidents that can be generated and tracked within the Willow platform.\r\nWhen a ticket is generated, a pre-defined workflow will determine how the problem is responded to and remedied. The Willow platform can automate the creation of\r\ntickets when an Insight is generated. Tickets that are generated outside the Willow platform can be created and updated using this endpoint."
      },
      {
          "name": "Users",
          "description": "Get a list of users for a particular customer and site."
      },
      {
          "name": "Twins",
          "description": "Get and Create new Digital Twins and the relevant relationships."
      },
      {
          "name": "Sites",
          "description": "Sites are the root node for location objects in the digital twin. The term 'site' is used to refer to buildings, venues, campuses (or other asset classes),\r\nor geolocations."
      },
      {
          "name": "Scanning",
          "description": "Scanning is the act of performing discovery at the source system for a specific site. Scan results should be published back to the Willow platform for further processing."
      },
      {
          "name": "Points",
          "description": "Points can be treated as leaf nodes for asset objects in the digital twin. They are children to both Equipment and Devices and correspond to LiveData that is\r\ntransmitted or received from a device. Similar to Equipment, ‘tags’ are associated with each Point to provide metadata about the object. These tags follow the\r\nguidance of Project Haystack and can be customized for each Customer and Site. Tags are strings that can be grouped together into arrays and applied to ‘Points’\r\nto provide metadata about their type, function, or purpose. These arrays are often referred to as ‘Tagsets’ and are a means of providing standard context about\r\nan entity."
      },
      {
          "name": "Mapped",
          "description": "Ticket Integration with Mapped"
      },
      {
          "name": "LookupData",
          "description": "Upload lookup data from source systems."
      },
      {
          "name": "LiveData",
          "description": "LiveData is generated by Points and stored in the digital twin, and is always associated with a timestamp value.\r\nThe Willow API has the ability to read current values as well as a historical values via the 'Trendlog' endpoint."
      },
      {
          "name": "Trendlog",
          "description": "Trend logs return an array of timestamped Point values. Because LiveData is often captured at minute (or quicker) intervals, this endpoint can return a large\r\namount of data with a single API call. Therefore, we recommend leveraging the query parameters to return a specific 'Point' and interval by specifying the\r\ndesired 'startDate' and 'endDate'."
      },
      {
          "name": "Insights",
          "description": "Insights are often referred to as faults or notifications and are generated within the digital twin based on rules and analytics. These Insights are triggered\r\nfrom LiveData or Trended data. Insights that are generated outside the Willow platform can be created using this endpoint."
      },
      {
          "name": "Equipments",
          "description": "Equipment is the root node for asset objects in the digital twin. Equipment is a physical object that may have associated Devices, Points, and LiveData.\r\nEquipment is associated to a location and a parent, which enables users to understand location context as well as relationships between equipment.\r\nThe Equipment object is categorized with a ‘discipline’ such as ‘HVAC’ or ‘Electrical’, which enables grouping of common pieces of equipment.\r\nThe digital twin also has ‘tags’ associated with each Equipment to provide metadata about the object. These tags follow the guidance of Project Haystack\r\nbut can be customized for each Customer and Site. Tags are strings that can be grouped together into arrays and applied to ‘Equipment’ to provide metadata about\r\nthe type, function, or purpose. These arrays are often referred to as ‘Tagsets’ and are a means of providing standard context about an entity."
      },
      {
          "name": "Devices",
          "description": "Devices are controller objects that have inputs and outputs that correspond to Point objects receiving and transmitting LiveData.\r\nWe adopt the use of Devices to follow BACnet terminology.\r\nThese controllers are often associated with a single Equipment object, but may have Point objects that span across multiple pieces of Equipment."
      },
      {
          "name": "Auth",
          "description": "Once your application is registered to use the Willow API, you'll receive a clientId and clientSecret which is used for authentication."
      },
      {
          "name": "Audit",
          "description": "Provides audit logging capabilities for applications."
      },
      {
          "name": "Assets",
          "description": "Assets are physical objects located at a site that have a commonly understood identity and value.\r\nThe Willow product suite refers to a collection of Assets as the Asset Register.\r\nAssets can be equipment objects such as electrical panelboards or fire pumps, or static objects such as doors, windows or workstations.\r\nEach asset is assigned to a Category such as 'HVAC - Air Side' or 'Architectural' to enable grouping of common pieces of equipment.\r\nEach Asset also has a rich set of parameters or properties. These parameters may be common across all assets, such as a 'Specification Section',\r\nor unique to an Asset type, such as VAV-Box 'Maximum Airflow Rating (CFM)'"
      },
      {
          "name": "AppConfigs",
          "description": "Configuration for application."
      }
  ]
}