using Newtonsoft.Json;
using Willow.Rules.Model;

namespace RulesEngine.Web;

/// <summary>
/// A rule parameter bound to a set of trend ids
/// </summary>
public class RuleParameterBoundDto
{
    /// <summary>
    /// Creates a new <see cref="RuleParameterBoundDto" /> from a <see cref="RuleParameterBound" />
    /// </summary>
    public RuleParameterBoundDto(RuleParameterBound ruleParameterBound)
    {
        Name = ruleParameterBound.Name;
        Units = ruleParameterBound.Units;
        FieldId = ruleParameterBound.FieldId;
        PointExpression = ruleParameterBound.PointExpression.Serialize();
        Status = ruleParameterBound.Status;
        CumulativeSetting = ruleParameterBound.CumulativeSetting;
        IsAutoGenerated = ruleParameterBound.IsAutoGenerated;
    }

    /// <summary>
    /// The field Id of the field that was used, e.g. "Binding" even though it's called "Temperature" in the UI
    /// </summary>
    public string FieldId { get; set; }

    /// <summary>
    /// Name
    /// </summary>
    public string Name { get; set; }

    /// <summary>
    /// Units
    /// </summary>
    public string Units { get; set; }

    /// <summary>
    /// Point expression to find the right capability from the sub-graph
    /// </summary>
    public string PointExpression { get; set; }

    /// <summary>
    /// Point expression translated for mapped point entity ids
    /// </summary>
    public string PointExpressionExplained { get; set; }

    /// <summary>
    /// Indicates validity status - If not valid then we were unable to bind all the variables to the equipment
    /// </summary>
    public RuleInstanceStatus Status { get; }

    /// <summary>
	/// Cumulative expressions setting applied each time a rule is evaluated, used to calculate total impact over time
	/// </summary>
	public CumulativeType CumulativeSetting { get; set; }

    /// <summary>
    /// Is the bound parameter auto-generated
    /// </summary>
    public bool IsAutoGenerated { get; init; }
}
